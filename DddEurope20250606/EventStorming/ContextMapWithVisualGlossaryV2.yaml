openapi: 3.1.0
info:
  title: Catalog Management API
  description: API for managing catalog entries, authors, and bibliographic abstracts within the catalog management bounded context
  version: 1.0.0
  x-api-id: 4c2a9f1e-8b6d-4e21-ab52-927c8edf5193
  x-audience: external-public

servers:
  - url: 'https://api.catalogmanagement.com/v1'

security:
  - openIdConnect:
      - catalog:read
      - catalog:write
      - catalog:admin

tags:
  - name: CatalogEntries
    description: Catalog entry management operations
  - name: Authors
    description: Author management operations
  - name: Abstracts
    description: Abstract content management operations

paths:
  /catalog-entries:
    get:
      operationId: getCatalogEntriesByFilter
      tags:
        - CatalogEntries
      security:
        - openIdConnect:
            - catalog:read
      parameters:
        - $ref: '#/components/parameters/ISBNParameter'
        - $ref: '#/components/parameters/AuthorIdParameter'
        - $ref: '#/components/parameters/TitleParameter'
        - $ref: '#/components/parameters/VersionParameter'
      responses:
        '200':
          $ref: '#/components/responses/CatalogEntryListResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'

    post:
      operationId: createCatalogEntry
      tags:
        - CatalogEntries
      security:
        - openIdConnect:
            - catalog:write
      requestBody:
        $ref: '#/components/requestBodies/CatalogEntryCreateRequest'
      responses:
        '201':
          $ref: '#/components/responses/CatalogEntryCreatedResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'

  /catalog-entries/{catalogIdentifier}:
    get:
      operationId: getCatalogEntryById
      tags:
        - CatalogEntries
      parameters:
        - $ref: '#/components/parameters/CatalogIdentifierParameter'
      responses:
        '200':
          $ref: '#/components/responses/CatalogEntryResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'

    put:
      operationId: updateCatalogEntry
      tags:
        - CatalogEntries
      parameters:
        - $ref: '#/components/parameters/CatalogIdentifierParameter'
      requestBody:
        $ref: '#/components/requestBodies/CatalogEntryUpdateRequest'
      responses:
        '200':
          $ref: '#/components/responses/CatalogEntryResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'

    delete:
      operationId: deleteCatalogEntry
      tags:
        - CatalogEntries
      parameters:
        - $ref: '#/components/parameters/CatalogIdentifierParameter'
      responses:
        '204':
          description: Catalog entry deleted successfully
        '404':
          $ref: '#/components/responses/NotFoundResponse'

  /catalog-entries/{catalogIdentifier}/abstract:
    get:
      operationId: getAbstractByCatalogId
      tags:
        - Abstracts
      parameters:
        - $ref: '#/components/parameters/CatalogIdentifierParameter'
      responses:
        '200':
          $ref: '#/components/responses/AbstractResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'

    post:
      operationId: createAbstract
      tags:
        - Abstracts
      parameters:
        - $ref: '#/components/parameters/CatalogIdentifierParameter'
      requestBody:
        $ref: '#/components/requestBodies/AbstractCreateRequest'
      responses:
        '201':
          $ref: '#/components/responses/AbstractCreatedResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'

  /authors:
    get:
      operationId: getAuthorsByFilter
      tags:
        - Authors
      security:
        - openIdConnect:
            - catalog:read
      parameters:
        - $ref: '#/components/parameters/AuthorNameParameter'
        - $ref: '#/components/parameters/AuthorGivenNameParameter'
        - $ref: '#/components/parameters/VersionParameter'
      responses:
        '200':
          $ref: '#/components/responses/AuthorListResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'

    post:
      operationId: createAuthor
      tags:
        - Authors
      security:
        - openIdConnect:
            - catalog:write
      requestBody:
        $ref: '#/components/requestBodies/AuthorCreateRequest'
      responses:
        '201':
          $ref: '#/components/responses/AuthorCreatedResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'

  /authors/{authorIdentifier}:
    get:
      operationId: getAuthorById
      tags:
        - Authors
      parameters:
        - $ref: '#/components/parameters/AuthorIdentifierParameter'
      responses:
        '200':
          $ref: '#/components/responses/AuthorResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'

components:
  parameters:
    CatalogIdentifierParameter:
      name: catalogIdentifier
      in: path
      required: true
      schema:
        type: string
        format: uuid

    AuthorIdentifierParameter:
      name: authorIdentifier
      in: path
      required: true
      schema:
        type: string
        format: uuid

    ISBNParameter:
      name: isbn
      in: query
      schema:
        type: string
        pattern: '^(978|979)[0-9]{10}$|^[0-9]{9}[0-9X]$'

    AuthorIdParameter:
      name: authorId
      in: query
      schema:
        type: string
        format: uuid

    AuthorNameParameter:
      name: name
      in: query
      schema:
        type: string

    AuthorGivenNameParameter:
      name: givenName
      in: query
      schema:
        type: string

    TitleParameter:
      name: title
      in: query
      schema:
        type: string

    VersionParameter:
      name: x-version
      in: header
      required: true
      schema:
        type: string
        default: "1.0.0"
        enum: ["1.0.0"]

  schemas:
    CatalogEntry:
      type: object
      required:
        - catalogIdentifier
        - isbn
        - title
        - authors
      properties:
        catalogIdentifier:
          type: string
          format: uuid
          description: Unique identifier for the catalog entry
        isbn:
          $ref: '#/components/schemas/ISBN'
        title:
          type: string
          minLength: 1
          maxLength: 500
          description: Title of the cataloged work
        authors:
          type: array
          items:
            $ref: '#/components/schemas/Author'
          minItems: 1
          description: List of authors associated with this catalog entry
        abstract:
          $ref: '#/components/schemas/Abstract'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    CatalogEntryCreate:
      type: object
      required:
        - isbn
        - title
        - authors
      properties:
        isbn:
          $ref: '#/components/schemas/ISBN'
        title:
          type: string
          minLength: 1
          maxLength: 500
        authors:
          type: array
          items:
            $ref: '#/components/schemas/AuthorCreate'
          minItems: 1
        abstract:
          $ref: '#/components/schemas/AbstractCreate'

    CatalogEntryUpdate:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 500
        authors:
          type: array
          items:
            $ref: '#/components/schemas/AuthorCreate'
          minItems: 1

    ISBN:
      type: object
      required:
        - value
        - type
      properties:
        value:
          type: string
          pattern: '^(978|979)[0-9]{10}$|^[0-9]{9}[0-9X]$'
          description: The ISBN value in either ISBN-10 or ISBN-13 format
        type:
          type: string
          enum:
            - ISBN-10
            - ISBN-13
          description: The format type of the ISBN
      description: International Standard Book Number with format specification

    Author:
      type: object
      required:
        - authorIdentifier
        - name
        - givenName
      properties:
        authorIdentifier:
          type: string
          format: uuid
          description: Unique identifier for the author
        name:
          type: string
          minLength: 1
          maxLength: 200
          description: Family name or surname of the author
        givenName:
          type: string
          minLength: 1
          maxLength: 200
          description: Given name or first name of the author
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      description: Author entity representing individuals who create cataloged works

    AuthorCreate:
      type: object
      required:
        - name
        - givenName
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 200
        givenName:
          type: string
          minLength: 1
          maxLength: 200

    Abstract:
      type: object
      required:
        - content
      properties:
        content:
          type: string
          maxLength: 5000
          description: Abstract content describing the cataloged work
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      description: Optional abstract content for catalog entries (0..1 relationship)

    AbstractCreate:
      type: object
      required:
        - content
      properties:
        content:
          type: string
          maxLength: 5000

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
        message:
          type: string
        details:
          type: object

  responses:
    CatalogEntryResponse:
      description: Single catalog entry response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CatalogEntry'

    CatalogEntryListResponse:
      description: List of catalog entries
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/CatalogEntry'

    CatalogEntryCreatedResponse:
      description: Catalog entry created successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CatalogEntry'

    AuthorResponse:
      description: Single author response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Author'

    AuthorListResponse:
      description: List of authors
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Author'

    AuthorCreatedResponse:
      description: Author created successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Author'

    AbstractResponse:
      description: Abstract content response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Abstract'

    AbstractCreatedResponse:
      description: Abstract created successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Abstract'

    BadRequestResponse:
      description: Invalid request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    NotFoundResponse:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    ForbiddenResponse:
      description: Access forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    ServiceNotAvailableResponse:
      description: Service unavailable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  requestBodies:
    CatalogEntryCreateRequest:
      description: Catalog entry creation request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CatalogEntryCreate'

    CatalogEntryUpdateRequest:
      description: Catalog entry update request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CatalogEntryUpdate'

    AuthorCreateRequest:
      description: Author creation request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorCreate'

    AbstractCreateRequest:
      description: Abstract creation request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AbstractCreate'

  securitySchemes:
    openIdConnect:
      type: openIdConnect
      openIdConnectUrl: https://auth.catalogmanagement.com/.well-known/openid-configuration

externalDocs:
  description: |
    Cross-context Integration Notes:
    - This API focuses solely on the Catalog Management bounded context
    - Integration with other contexts (e.g., User Management, Order Management) 
      should be handled through domain events or separate API calls
    - Author entities may be referenced by external systems but are managed within this context
  url: https://docs.catalogmanagement.com/integration-guide
