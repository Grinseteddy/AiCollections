openapi: 3.1.0
info:
  title: Catalog Management API
  description: API for managing library catalog entries, books, authors, and bibliographic information
  version: 1.0.0
  x-api-id: 2f8e4a1b-9d3c-4f67-b829-7e5f2a8c9d1e
  x-audience: external-public
  contact:
    name: Library Systems Team
    email: support@librarymanagement.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: 'https://api.catalogmanagement.com/v1'
    description: Production server
  - url: 'https://staging-api.catalogmanagement.com/v1'
    description: Staging server

security:
  - bearerAuth: []

tags:
  - name: Catalog Entries
    description: Operations for managing catalog entries
  - name: Authors
    description: Operations for managing author information
  - name: Books
    description: Operations for managing book information
  - name: ISBN
    description: Operations for ISBN validation and lookup

paths:
  /catalog-entries:
    get:
      operationId: getCatalogEntries
      tags:
        - Catalog Entries
      summary: Retrieve catalog entries
      description: Get a list of catalog entries with optional filtering
      parameters:
        - $ref: '#/components/parameters/AuthorIdParameter'
        - $ref: '#/components/parameters/ISBNParameter'
        - $ref: '#/components/parameters/TitleParameter'
        - $ref: '#/components/parameters/LimitParameter'
        - $ref: '#/components/parameters/OffsetParameter'
      responses:
        '200':
          $ref: '#/components/responses/CatalogEntryListResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'

    post:
      operationId: createCatalogEntry
      tags:
        - Catalog Entries
      summary: Create a new catalog entry
      description: Create a new catalog entry for a book
      requestBody:
        $ref: '#/components/requestBodies/CatalogEntryCreateRequest'
      responses:
        '201':
          $ref: '#/components/responses/CatalogEntryResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'

  /catalog-entries/{catalogId}:
    get:
      operationId: getCatalogEntryById
      tags:
        - Catalog Entries
      summary: Get catalog entry by ID
      description: Retrieve a specific catalog entry by its catalog identifier
      parameters:
        - $ref: '#/components/parameters/CatalogIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/CatalogEntryResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'

    put:
      operationId: updateCatalogEntry
      tags:
        - Catalog Entries
      summary: Update catalog entry
      description: Update an existing catalog entry
      parameters:
        - $ref: '#/components/parameters/CatalogIdParameter'
      requestBody:
        $ref: '#/components/requestBodies/CatalogEntryUpdateRequest'
      responses:
        '200':
          $ref: '#/components/responses/CatalogEntryResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'

    delete:
      operationId: deleteCatalogEntry
      tags:
        - Catalog Entries
      summary: Delete catalog entry
      description: Remove a catalog entry from the system
      parameters:
        - $ref: '#/components/parameters/CatalogIdParameter'
      responses:
        '204':
          description: Catalog entry deleted successfully
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'

  /authors:
    get:
      operationId: getAuthors
      tags:
        - Authors
      summary: Retrieve authors
      description: Get a list of authors with optional filtering
      parameters:
        - $ref: '#/components/parameters/AuthorNameParameter'
        - $ref: '#/components/parameters/LimitParameter'
        - $ref: '#/components/parameters/OffsetParameter'
      responses:
        '200':
          $ref: '#/components/responses/AuthorListResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'

    post:
      operationId: createAuthor
      tags:
        - Authors
      summary: Create a new author
      description: Add a new author to the system
      requestBody:
        $ref: '#/components/requestBodies/AuthorCreateRequest'
      responses:
        '201':
          $ref: '#/components/responses/AuthorResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'

  /authors/{authorId}:
    get:
      operationId: getAuthorById
      tags:
        - Authors
      summary: Get author by ID
      description: Retrieve a specific author by their identifier
      parameters:
        - $ref: '#/components/parameters/AuthorIdPathParameter'
      responses:
        '200':
          $ref: '#/components/responses/AuthorResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'

    put:
      operationId: updateAuthor
      tags:
        - Authors
      summary: Update author
      description: Update an existing author's information
      parameters:
        - $ref: '#/components/parameters/AuthorIdPathParameter'
      requestBody:
        $ref: '#/components/requestBodies/AuthorUpdateRequest'
      responses:
        '200':
          $ref: '#/components/responses/AuthorResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'

  /isbn/{isbn}/validate:
    get:
      operationId: validateISBN
      tags:
        - ISBN
      summary: Validate ISBN
      description: Validate an ISBN-10 or ISBN-13 format
      parameters:
        - $ref: '#/components/parameters/ISBNPathParameter'
      responses:
        '200':
          $ref: '#/components/responses/ISBNValidationResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'

  /isbn/{isbn}/lookup:
    get:
      operationId: lookupISBN
      tags:
        - ISBN
      summary: Lookup book by ISBN
      description: Find catalog entries associated with a specific ISBN
      parameters:
        - $ref: '#/components/parameters/ISBNPathParameter'
      responses:
        '200':
          $ref: '#/components/responses/CatalogEntryListResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'

components:
  parameters:
    CatalogIdParameter:
      name: catalogId
      in: path
      required: true
      description: Unique identifier for a catalog entry
      schema:
        type: string
        format: uuid

    AuthorIdParameter:
      name: authorId
      in: query
      description: Filter by author identifier
      schema:
        type: string
        format: uuid

    AuthorIdPathParameter:
      name: authorId
      in: path
      required: true
      description: Unique identifier for an author
      schema:
        type: string
        format: uuid

    ISBNParameter:
      name: isbn
      in: query
      description: Filter by ISBN (10 or 13 digit)
      schema:
        type: string
        pattern: '^(?:ISBN(?:-1[03])?:? )?(?=[0-9X]{10}$|(?=(?:[0-9]+[- ]){3})[- 0-9X]{13}$|97[89][0-9]{10}$|(?=(?:[0-9]+[- ]){4})[- 0-9]{17}$)(?:97[89][- ]?)?[0-9]{1,5}[- ]?[0-9]+[- ]?[0-9]+[- ]?[0-9X]$'

    ISBNPathParameter:
      name: isbn
      in: path
      required: true
      description: ISBN to validate or lookup
      schema:
        type: string

    TitleParameter:
      name: title
      in: query
      description: Filter by book title (partial match)
      schema:
        type: string
        maxLength: 500

    AuthorNameParameter:
      name: name
      in: query
      description: Filter by author name (partial match)
      schema:
        type: string
        maxLength: 200

    LimitParameter:
      name: limit
      in: query
      description: Maximum number of items to return
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20

    OffsetParameter:
      name: offset
      in: query
      description: Number of items to skip
      schema:
        type: integer
        minimum: 0
        default: 0

  schemas:
    CatalogEntry:
      type: object
      required:
        - catalogIdentifier
        - title
        - isbn
        - authors
      properties:
        catalogIdentifier:
          type: string
          format: uuid
          description: Unique identifier for the catalog entry
        title:
          type: string
          minLength: 1
          maxLength: 500
          description: Title of the book
        abstract:
          type: string
          maxLength: 2000
          description: Brief description or summary of the book
        isbn:
          $ref: '#/components/schemas/ISBN'
        authors:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/Author'
          description: List of authors for this book
        createdAt:
          type: string
          format: date-time
          description: When the catalog entry was created
        updatedAt:
          type: string
          format: date-time
          description: When the catalog entry was last updated
        createdBy:
          type: string
          description: Librarian who created the entry

    CatalogEntryCreate:
      type: object
      required:
        - title
        - isbn
        - authorIds
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 500
          description: Title of the book
        abstract:
          type: string
          maxLength: 2000
          description: Brief description or summary of the book
        isbn:
          $ref: '#/components/schemas/ISBNInput'
        authorIds:
          type: array
          minItems: 1
          items:
            type: string
            format: uuid
          description: List of author IDs to associate with this book

    CatalogEntryUpdate:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 500
          description: Title of the book
        abstract:
          type: string
          maxLength: 2000
          description: Brief description or summary of the book
        isbn:
          $ref: '#/components/schemas/ISBNInput'
        authorIds:
          type: array
          minItems: 1
          items:
            type: string
            format: uuid
          description: List of author IDs to associate with this book

    ISBN:
      type: object
      required:
        - value
        - type
      properties:
        value:
          type: string
          description: The ISBN value
        type:
          type: string
          enum: [ISBN-10, ISBN-13]
          description: Whether this is ISBN-10 or ISBN-13 format
        isValid:
          type: boolean
          description: Whether the ISBN format is valid

    ISBNInput:
      type: object
      required:
        - value
      properties:
        value:
          type: string
          pattern: '^(?:ISBN(?:-1[03])?:? )?(?=[0-9X]{10}$|(?=(?:[0-9]+[- ]){3})[- 0-9X]{13}$|97[89][0-9]{10}$|(?=(?:[0-9]+[- ]){4})[- 0-9]{17}$)(?:97[89][- ]?)?[0-9]{1,5}[- ]?[0-9]+[- ]?[0-9]+[- ]?[0-9X]$'
          description: The ISBN value (10 or 13 digits)

    Author:
      type: object
      required:
        - authorIdentifier
        - name
      properties:
        authorIdentifier:
          type: string
          format: uuid
          description: Unique identifier for the author
        name:
          type: string
          minLength: 1
          maxLength: 200
          description: Full name of the author
        givenName:
          type: string
          maxLength: 100
          description: Given name (first name) of the author
        familyName:
          type: string
          maxLength: 100
          description: Family name (last name) of the author
        biography:
          type: string
          maxLength: 2000
          description: Brief biography of the author
        birthDate:
          type: string
          format: date
          description: Author's birth date
        nationality:
          type: string
          maxLength: 100
          description: Author's nationality
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    AuthorCreate:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 200
          description: Full name of the author
        givenName:
          type: string
          maxLength: 100
          description: Given name (first name) of the author
        familyName:
          type: string
          maxLength: 100
          description: Family name (last name) of the author
        biography:
          type: string
          maxLength: 2000
          description: Brief biography of the author
        birthDate:
          type: string
          format: date
          description: Author's birth date
        nationality:
          type: string
          maxLength: 100
          description: Author's nationality

    AuthorUpdate:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 200
          description: Full name of the author
        givenName:
          type: string
          maxLength: 100
          description: Given name (first name) of the author
        familyName:
          type: string
          maxLength: 100
          description: Family name (last name) of the author
        biography:
          type: string
          maxLength: 2000
          description: Brief biography of the author
        birthDate:
          type: string
          format: date
          description: Author's birth date
        nationality:
          type: string
          maxLength: 100
          description: Author's nationality

    ISBNValidation:
      type: object
      required:
        - isbn
        - isValid
        - type
      properties:
        isbn:
          type: string
          description: The ISBN that was validated
        isValid:
          type: boolean
          description: Whether the ISBN is valid
        type:
          type: string
          enum: [ISBN-10, ISBN-13, INVALID]
          description: The type of ISBN
        errors:
          type: array
          items:
            type: string
          description: List of validation errors if invalid

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: Error code
        message:
          type: string
          description: Human-readable error message
        details:
          type: object
          description: Additional error details
        timestamp:
          type: string
          format: date-time
          description: When the error occurred

    PaginatedResponse:
      type: object
      required:
        - total
        - limit
        - offset
      properties:
        total:
          type: integer
          minimum: 0
          description: Total number of items available
        limit:
          type: integer
          minimum: 1
          description: Maximum number of items returned
        offset:
          type: integer
          minimum: 0
          description: Number of items skipped

  responses:
    CatalogEntryResponse:
      description: Single catalog entry
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CatalogEntry'

    CatalogEntryListResponse:
      description: List of catalog entries
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/PaginatedResponse'
              - type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/CatalogEntry'

    AuthorResponse:
      description: Single author
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Author'

    AuthorListResponse:
      description: List of authors
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/PaginatedResponse'
              - type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Author'

    ISBNValidationResponse:
      description: ISBN validation result
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ISBNValidation'

    BadRequestResponse:
      description: Invalid request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    UnauthorizedResponse:
      description: Authentication required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    NotFoundResponse:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    ConflictResponse:
      description: Resource already exists
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    InternalServerErrorResponse:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  requestBodies:
    CatalogEntryCreateRequest:
      description: Catalog entry creation request
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CatalogEntryCreate'

    CatalogEntryUpdateRequest:
      description: Catalog entry update request
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CatalogEntryUpdate'

    AuthorCreateRequest:
      description: Author creation request
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorCreate'

    AuthorUpdateRequest:
      description: Author update request
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorUpdate'

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token for authentication
  
