extends: [[spectral:oas, 'off']]

documentationUrl: https://github.com/Grinseteddy/AiCollections/blob/main/AiComparison/RuleSetDescription.md

functions:
  - assert-http-codes-for-operation
  - count-resource-types
  - is-object-schema
  - is-error-json-schema
  - rule-132
  - is-uuid-id
  - is-not-undefined
  - enum-allow-list
  - filename-ends-with-audience
  - filename-begins-with-bc-name
  - scope-conventions
  - has-no-scopes
  - has-exactly-one-of-required-headers

rules:
  # https://meta.stoplight.io/docs/spectral/docs/reference/openapi-rules.md#oas3-schema
  oas3-schema: true

 # helps identifying parser problem in yaml
  MUST-null:
    message: "problem parsing {{property}}"
    description: YAML Parser Problem
    documentationUrl: https://github.com/Grinseteddy/AiCollections/blob/main/AiComparison/RuleSetDescription.md
    severity: error # Not an error as you only should provide an example to help your consumers
    given: $.paths..[?(@ == null )]
    then:
      field: examples
      function: truthy

  # MUST contain API meta information [01-01]
  01-01_MUST-have-info-description:
    message: Missing `info.description`.
    description: MUST contain meta data information
    documentationUrl: https://github.com/Grinseteddy/AiCollections/blob/main/AiComparison/RuleSetDescription.md#01-01
    severity: error
    given: $.info
    then:
      field: description
      function: truthy

  # MUST contain API meta information [01-02]
  01-02_MUST-have-info-contact-name:
    message: Missing `info.contact.name`.
    description: OpenAPI MUST contain meta data contact name [01-02].
    documentationUrl: https://github.com/Grinseteddy/AiCollections/blob/main/AiComparison/RuleSetDescription.md#01-02
    severity: error
    given: $.info
    then:
      field: contact.name
      function: truthy

  # MUST contain API meta information [01-02]
  01-02_MUST-have-info-contact-email:
    message: Missing `info.contact.email`.
    description: OpenAPI MUST contain meta data [01-02]
    documentationUrl: https://github.com/Grinseteddy/AiCollections/blob/main/AiComparison/RuleSetDescription.md#01-02
    severity: error
    given: $.info
    then:
      field: contact.email
      function: truthy

  # MUST contain API meta information [01-03]
  01-03_MUST-have-info-x-api-id:
    message: Missing `info.x-api-id`.
    description: OpenAPI MUST contain unique identifier of the API [01-03]
    documentationUrl: https://github.com/Grinseteddy/AiCollections/blob/main/AiComparison/RuleSetDescription.md#01-03
    severity: error
    given: $.info
    then:
      field: x-api-id
      function: truthy

  # MUST use semantic versioning [01-04]
  # => https://opensource.zalando.com/restful-api-guidelines/#116
  01-04_MUST-use-semantic-versioning:
    message: '{{error}}'
    description: MUST use semantic versioning [01-04]
    documentationUrl: https://github.com/Grinseteddy/AiCollections/blob/main/AiComparison/RuleSetDescription.md#01-04
    severity: error
    given: $.info.version
    then:
      function: schema
      functionOptions:
        schema:
          type: string
          pattern: '^[0-9]+\.[0-9]+\.[0-9]+(-[0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*)?$'


  # MUST provide API audience [01-06]
  01-06_MUST-provide-api-audience:
    message: "{{error}}"
    description: MUST define a target group [01-06]
    documentationUrl: https://github.com/Grinseteddy/AiCollections/blob/main/AiComparison/RuleSetDescription.md#01-06
    severity: error
    given: $.info
    then:
      - field: x-audience
        function: enumeration
        functionOptions:
          values:
            - public-external
            - cluster-internal
            - service-internal

  # MUST provide security scopes [02-01]
  02-01_MUST-define-security:
    message: "{{error}}"
    description: MUST contain a security scope [02-01]
    documentationUrl:
    severity: error
    given: $.paths.*.*
    then:
      - field: security
        function: schema
        functionOptions:
          schema:
            type: array
            minItems: 1

  # MUST contain a security scope [02-02]
  02-02_MUST-define-security-requirement-object:
    message: "{{error}}"
    description: MUST contain a security scope [02-02]
    documentationUrl: https://github.com/Grinseteddy/AiCollections/blob/main/AiComparison/RuleSetDescription.md#02-02
    severity: error
    given: $.paths.*.*.security[*]
    then:
      field: openIdConnect
      function: truthy

  # MUST contain a security scope [02-02]
  02-02_MUST-follow-scope-conventions:
    message: "{{error}}"
    description: MUSS die Namenskonvention f√ºr Berechtigungen (Scopes) folgen [03-02]
    documentationUrl: https://github.com/Grinseteddy/AiCollections/blob/main/AiComparison/RuleSetDescription.md#02-02
    severity: error
    given: $.paths.*.*.security[*].openIdConnect
    then:
      function: scope-conventions
      functionOptions:
        httpVerbToAccessModesMap:
          "GET" : ["read"]
          "POST" : ["write", "read"]
          "PUT" : ["write"]
          "PATCH" : ["write"]
          "DELETE" : ["write"]

  # MUST define a format for number and integer types [03-01]
  03-01_MUST-define-a-format-for-number-types:
    message: Numeric properties MUST have valid format specified
    description: If using number or integer type, formatting MUST be defined [03-01]
    documentationUrl: https://github.com/Grinseteddy/AiCollections/blob/main/AiComparison/RuleSetDescription.md#03-01
    severity: error
    given: $.paths.*.*..schema..properties..[?(@ && @.type=='number')]
    then:
      - field: format
        function: defined
      - field: format
        function: pattern
        functionOptions:
          match: ^(float|double|decimal)$

  # MUST define a format for number and integer types [03-01]
  03-01_MUST-define-a-format-for-integer-types:
    message: Numeric properties MUST have valid format specified
    description: If using number or integer type, formatting MUST be defined [03-01]
    documentationUrl: https://github.com/Grinseteddy/AiCollections/blob/main/AiComparison/RuleSetDescription.md#03-01
    severity: error
    given: $.paths.*.*..schema..properties..[?(@ && @.type=='integer')]
    then:
      - field: format
        function: defined
      - field: format
        function: pattern
        functionOptions:
          match: ^(int32|int64|bigint)$

  # MUST use standard formats for date and time properties [03-02]
  03-02_MUST-use-standard-formats-for-date-and-time-properties-example:
    message: "You SHOULD provide an example for {{property}}"
    description: If using date or time properties, the formatting has to be given [03-02]
    documentationUrl: https://github.com/Grinseteddy/AiCollections/blob/main/AiComparison/RuleSetDescription.md#03-02
    severity: warn # Not an error as you only SHOULD provide an example to help your consumers
    given: $.paths..[?((@ != null && @.type === 'string') && (@.format === 'date-time' || @.format === 'date' || @.format === 'time' || @.format === 'duration' || @.format === 'period'))]
    then:
      field: examples
      function: truthy

  # MUST use standard formats for date and time properties [03-02]
  03-02_MUST-use-standard-formats-for-date-and-time-properties-utc:
    message: "You SHOULD UTC for {{property}}"
    description: If using date or time properties, the formatting has to be given [03-02]
    documentationUrl: https://github.com/Grinseteddy/AiCollections/blob/main/AiComparison/RuleSetDescription.md#03-02
    severity: warn # Not an error as you only SHOULD provide an example to help your consumers
    given: $.paths..[?( @!= null && @.type === 'string' && @.format === 'date-time')]
    then:
      field: examples
      function: pattern
      functionOptions:
        match: "Z$"

  # MUST use UUIDs [04-01]
  04-01_MUST-use-uuid-for-ids:
    message: "You MUST use UUIDs for Identifiers for {{property}} if possible"
    description: Identifiers of properties MUST use UUIDs [04-01]
    documentationUrl: https://github.com/Grinseteddy/AiCollections/blob/main/AiComparison/RuleSetDescription.md#04-01
    severity: warn
    given: $.paths..[?(@ != null && @.schema != null)]
    then:
      function: is-uuid-id

  # SHOULD NOT use /api as base path [05-01]
  05-01_SHOULD-NOT-use-api-as-base-path:
    message: Path SHOULD NOT start with /api
    description: SHOULD NOT start with /api [05-01]
    documentationUrl: https://github.com/Grinseteddy/AiCollections/blob/main/AiComparison/RuleSetDescription.md#05-01
    severity: warn
    given: $.paths.*~
    then:
      function: pattern
      functionOptions:
        notMatch: ^/api

  # The path segments MUST be separated words in lowercase with hyphens. [05-02]
  05-02_MUST-use-lowercase-with-hypens-for-path-segements:
    message: Path segments have to be lowercase separate words with hyphens
    description: The path segments MUST use kebab-cases [05-02]
    documentationUrl: https://github.com/Grinseteddy/AiCollections/blob/main/AiComparison/RuleSetDescription.md#05-02
    severity: error
    given: $.paths.*~
    then:
      function: pattern
      functionOptions:
        match: ^(?=((([\/a-z][a-z0-9\-\/]*)?({[^}]*})?)+))\1$

  # MUST use normalized paths without empty path segments and trailing slashes [05-03]
  05-03_MUST-use-normalized-paths-without-empty-path-segments:
    message: Empty path segments are not allowed
    description: Path MUST use normalized [05-03]
    documentationUrl: https://github.com/Grinseteddy/AiCollections/blob/main/AiComparison/RuleSetDescription.md#05-03
    severity: error
    given: $.paths.*~
    then:
      function: pattern
      functionOptions:
        notMatch: //

  # MUST use normalized paths without empty path segments and trailing slashes [05-03]
  05-03_MUST-use-normalized-paths-without-trailing-slash:
    message: Path with trailing slash is not allowed
    description: Path MUST use normalized [05-03]
    documentationUrl: https://github.com/Grinseteddy/AiCollections/blob/main/AiComparison/RuleSetDescription.md#05-03
    severity: error
    given: $.paths.*~
    then:
      function: pattern
      functionOptions:
        notMatch: /$

  # SHOULD limit number of resource types [06-01]
  06-01_SHOULD-limit-number-of-resource-types:
    message: '{{error}}'
    description: should limit the number of resource types [06-01]
    documentationUrl: https://github.com/Grinseteddy/AiCollections/blob/main/AiComparison/RuleSetDescription.md#06-01
    severity: warn
    given: $.paths
    then:
      function: count-resource-types
      functionOptions:
        max: 8

  # SHOULD limit number of sub-resource levels [06-02]
  06-02_SHOULD-limit-number-of-sub-resource-levels:
    message: Sub-resource levels SHOULD by <= 3
    description: The API SHOULD limit number of sub-resource levels [06-02]
    documentationUrl: https://github.com/Grinseteddy/AiCollections/blob/main/AiComparison/RuleSetDescription.md#06-02
    severity: warn
    given: $.paths.*~
    then:
      function: pattern
      functionOptions:
        match: ^\/[^\/]*((\/{[^}]*})*\/[^\/]*(\/{[^}]*})*){0,3}\/?$

  # MUST use camelCase for query parameters [0]
  07-01_MUST-use-snake-case-for-query-parameters:
    message: Query parameters MUST be camelCase
    description: The API MUST use camelCase for query parameters [07-01]
    documentationUrl: https://github.com/Grinseteddy/AiCollections/blob/main/AiComparison/RuleSetDescription.md#07-01
    severity: error
    given: $.paths.*.*.parameters[?(@ && @.in=='query')].name
    then:
      function: pattern
      functionOptions:
        match: '^[a-z][a-z]*(([A-Z][a-z]+)*[A-Z]?|([a-z]+[A-Z])*|[A-Z])$'

  # MUST property names MUST be ASCII camelCase [07-02]
  07-02_MUST-use-camel-case-for-property-names:
    message: Property name has to be ASCII camelCase
    description: The API must use camelCase for property names. [07-02]
    documentationUrl:
    severity: error
    given: $.paths.*.*[responses,requestBody]..content..schema..properties.*~
    then:
      function: pattern
      functionOptions:
        match: '^[a-z][a-z]*(([A-Z][a-z]+)*[A-Z]?|([a-z]+[A-Z])*|[A-Z])$'

  # SHOULD declare enum values using UPPER_SNAKE_CASE format [07-03]
  07-03_SHOULD-declare-enum-values-using-upper-snake-case-format:
    message: 'Enum values SHOULD be in UPPER_SNAKE_CASE format'
    description: The API SHOULD declare enum values using UPPER_SNAKE_CASE format. [07-03]
    documentationUrl:
    severity: warn
    given: $.paths..[?(@ && @.type=='string')].[enum,x-extensible-enum].*
    then:
      function: pattern
      functionOptions:
        match: ^[A-Z_0-9.]*$

  # Boolean types MUST NOT use Null. [08-01]
  08-01_MUST-NOT-use-null-for-boolean:
    message: "MUST NOT use null for boolean properties - provide a default"
    description: Boolean types MUST NOT use Null. [08-01]
    documentationUrl:
    severity: error
    given: $.paths..[?((@ != null && @.type === 'boolean'))]
    then:
      field: default
      function: is-not-undefined

  # NULL SHOULD NOT be used for empty array. [08-02]
  06-10_SHOULD-NOT-use-null-for-empty-arrays:
    message: "provide the field minItems for arrays. Consider providing [] for nullable lists"
    description: NULL SHOULD NOT be used for empty array. [08-02]
    documentationUrl:
    severity: warn
    given: $.paths..[?((@ != null && @.type === 'array'))]
    then:
      field: minItems
      function: is-not-undefined

  # Responses SHOULD use well understood status codes. [05-04]
  05-04_SHOULD-use-well-understood-http-status-codes:
    message: '{{error}}'
    description: MUSS Standard-Status-Codes verwenden [05-04]
    documentationUrl:
    severity: warn
    given: $.paths.*
    then:
      function: assert-http-codes-for-operation
      functionOptions:
        wellUnderstood:
          # Success Codes
          '200': [ ALL ]
          '201': [ POST, PUT ]
          '202': [ POST, PUT, DELETE, PATCH ]
          '204': [ PUT, DELETE, PATCH ]
          '207': [ POST, PUT ]

          # Redirection Codes
          #'301': [ALL]
          #'303': [PATCH, POST, PUT, DELETE]
          #'304': [GET, HEAD]

          # Client Side Error Codes
          '400': [ ALL ]
          '401': [ ALL ]
          '403': [ ALL ]
          '404': [ GET, PATCH, POST, PUT ]
          #'405': [ALL]
          #'406': [ALL]
          #'408': [ALL]
          '409': [ POST, PUT, DELETE, PATCH ]
          #'410': [ALL]
          #'412': [PUT, DELETE, PATCH]
          '415': [ POST, PUT, DELETE, PATCH ]
          #'423': [PUT, DELETE, PATCH]
          #'428': [ALL]
          #'429': [ALL]

          # Server Side Error Codes
          '500': [ ALL ]
          #'501': [ALL]
          #'503': [ALL]

          # OpenApi
          'default': [ ALL ]

  # MUST specify success and error responses [05-05]
  05-05_MUST-specify-default-response:
    message: Operation does not contain a default response
    description: The API MUST specify success and error responses. [05-05]
    documentationUrl:
    severity: error
    given: $.paths.*.*.responses
    then:
      field: default
      function: truthy

  # MUST use standard HTTP status codes [05-06]
  05-06_MUST-use-standard-http-status-codes:
    message: '{{property}} is not a standardized response code'
    description: The API MUST use standard HTTP status codes [05-06]
    documentationUrl:
    severity: error
    given: $.paths.*.*.responses.*~
    then:
      function: enumeration
      functionOptions:
        values:
          - '100'
          - '101'
          - '200'
          - '201'
          - '202'
          - '203'
          - '204'
          - '205'
          - '206'
          - '207'
          - '300'
          - '301'
          - '302'
          - '303'
          - '304'
          - '305'
          - '307'
          - '400'
          - '401'
          - '402'
          - '403'
          - '404'
          - '405'
          - '406'
          - '407'
          - '408'
          - '409'
          - '410'
          - '411'
          - '412'
          - '413'
          - '414'
          - '415'
          - '416'
          - '417'
          - '423'
          - '426'
          - '428'
          - '429'
          - '431'
          - '500'
          - '501'
          - '502'
          - '503'
          - '504'
          - '505'
          - '511'
          - default

  # MUST muse Error Json[05-07]
  05-07_MUST-use-valid-error-json-schema:
    message: '{{error}}'
    description: The error responses MUST use Error object [05-07]
    documentationUrl:
    severity: error
    given: $.components.schemas
    then:
      field: Error
      function: is-error-json-schema

  # SHOULD prefer hyphenated-pascal-case for HTTP header fields [07-04]
  07-04_SHOULD-use-hyphenated-pascal-case-for-header-parameters:
    message: Header parameters SHOULD be Kebab-Case
    description: The API SHOULD use hyphenated-pascal-case for header parameters [07-04]
    documentationUrl:
    severity: warn
    given: $.paths..parameters[?(@ && @.in=='header')].name
    then:
      function: rule-132

  # MUST not use URI versioning [09-01]
  09-01_MUST-NOT-use-uri-versioning:
    message: Path MUST not contain versioning
    description: MUSS keine URL Versionierung verwenden [09-01]
    documentationUrl:
    severity: error
    given: $.paths.*~
    then:
      function: pattern
      functionOptions:
        notMatch: /v[0-9]+/

  # MUST use header versioning [09-02]
  09-02_MUST-use-header-api-version:
    message: "MUST specify 'x-api-version' as required header"
    description: The API MUST use a header parameter for versioning [09-02]
    documentationUrl:
    severity: error
    given: "$.paths[*][*].parameters"
    then:
      function: truthy
      field: "$.[?(@.in == 'header' && @.name == 'x-api-version' && @.required == true)]"

  # MUST always return JSON objects as top-level data structure [05-08]
  05-08_MUST-always-return-json-objects-as-top-level-data-structures:
    message: 'Top-level data structure MUST be an object'
    description: An endpoint MUST always return a JSON object as top-level data structure [05-08]
    documentationUrl:
    severity: error
    given: $.paths.*.*[responses,requestBody]..content..schema
    then:
      function: is-object-schema

  # SHOULD use open-ended list of values (x-extensible-enum) for enumerations [08-03]
  08-03_SHOULD-use-x-extensible-enum:
    message: 'Should use `x-extensible-enum` instead of `enum`'
    description: The schema SHOULD use open-ended list of values (x-extensible-enum) for enum [08-03]
    documentationUrl:
    severity: warn
    given: $.paths..[?(@ != null && @.schema != null)]
    then:
      function: enum-allow-list

