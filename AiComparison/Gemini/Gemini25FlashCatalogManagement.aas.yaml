asyncapi: 3.0.0
info:
  title: Catalog Management
  version: 2025-1
  description: |
    Events produced by the Catalog Management service.
    This service is responsible for managing catalog entries (books) and produces
    the following domain events:
      - Catalog Entry Created
      - Catalog Entry Changed
      - Catalog Entry Deleted
  contact:
    name: Annegret Junker
    url: https://online-library.org/sample
    email: annegret.junker@online-library.org
  # Assuming a new API ID for the Catalog Management service
  x-api-id:
    a82b3d4e-5f6a-7b8c-9d0e-1f2a3b4c5d6e
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  tags:
    - name: Catalog Management
      description: All events produced by Catalog Management
    - name: Library Core Domain
      description: Core events for the Online Library system

servers:
  event-broker-library:
    host: broker.online-library.org:8092
    protocol: kafka
    description: Event broker of the online library
    security:
      - $ref: '#/components/securitySchemes/user-password'
    bindings:
      kafka:
        schemaRegistryUrl: 'https://online-library-schema-registry.com'
        schemaRegistryVendor: 'confluent'
        bindingVersion: '0.5.0'

channels:
  CatalogEntryCreatedChannel:
    description: Channel for new catalog entries being created.
    address: catalog-entry-created
    messages:
      CatalogEntryCreatedEvent:
        $ref: '#/components/messages/CatalogEntryCreated'
    bindings:
      kafka:
        topic: 'catalog-entry-created-event-channel'
        bindingVersion: '0.5.0'

  CatalogEntryChangedChannel:
    description: Channel for updates to an existing catalog entry.
    address: catalog-entry-changed
    messages:
      CatalogEntryChangedEvent:
        $ref: '#/components/messages/CatalogEntryChanged'
    bindings:
      kafka:
        topic: 'catalog-entry-changed-event-channel'
        bindingVersion: '0.5.0'

  CatalogEntryDeletedChannel:
    description: Channel for existing catalog entries being deleted.
    address: catalog-entry-deleted
    messages:
      CatalogEntryDeletedEvent:
        $ref: '#/components/messages/CatalogEntryDeleted'
    bindings:
      kafka:
        topic: 'catalog-entry-deleted-event-channel'
        bindingVersion: '0.5.0'

operations:
  CatalogEntryCreatedSendOperation:
    description: Event sent by Catalog Management when a new catalog entry is created.
    action: "send"
    channel:
      $ref: "#/channels/CatalogEntryCreatedChannel"
    bindings:
      kafka:
        bindingVersion: '0.5.0'
        groupId:
          type: string
          pattern: ^cg-catalog-entry-created-.*$

  CatalogEntryChangedSendOperation:
    description: Event sent by Catalog Management when an existing catalog entry is changed.
    action: "send"
    channel:
      $ref: "#/channels/CatalogEntryChangedChannel"
    bindings:
      kafka:
        bindingVersion: '0.5.0'
        groupId:
          type: string
          pattern: ^cg-catalog-entry-changed-.*$

  CatalogEntryDeletedSendOperation:
    description: Event sent by Catalog Management when a catalog entry is deleted.
    action: "send"
    channel:
      $ref: "#/channels/CatalogEntryDeletedChannel"
    bindings:
      kafka:
        bindingVersion: '0.5.0'
        groupId:
          type: string
          pattern: ^cg-catalog-entry-deleted-.*$

components:
  messages:
    CatalogEntryCreated:
      summary: Event signaling the creation of a new catalog entry.
      headers:
        $ref: '#/components/schemas/MessageHeader'
      payload:
        $ref: '#/components/schemas/CatalogEntry'

    CatalogEntryChanged:
      summary: Event signaling that an existing catalog entry has been changed.
      headers:
        $ref: '#/components/schemas/MessageHeader'
      payload:
        $ref: '#/components/schemas/CatalogEntry'

    CatalogEntryDeleted:
      summary: Event signaling that an existing catalog entry has been deleted.
      headers:
        $ref: '#/components/schemas/MessageHeader'
      # The payload for a delete event typically contains the minimum required
      # information (e.g., ID) to identify the deleted resource.
      payload:
        type: object
        required:
          - catalogEntryId
        properties:
          catalogEntryId:
            $ref: '#/components/schemas/CatalogEntry/properties/catalogEntryId'
          deletedAt:
            description: Timestamp of when the catalog entry was deleted
            type: string
            format: date-time
            examples:
              - 2025-12-05T14:48:00Z


  schemas:

    # --- Catalog Management Core Schemas based on Visual Glossary ---

    CatalogEntry:
      description: A record in the catalog that aggregates information about a Book and its contents.
      type: object
      required:
        - catalogEntryId
        - createdAt
        - title
        - isbn
        - publishedOn
      properties:
        catalogEntryId:
          description: Unique identifier of the Catalog Entry (Schlüssel/Identifier).
          type: string
          format: uuid
          examples:
            - 5dda405a-d28e-490a-8508-1ea3453e91ae
        createdAt:
          description: Timestamp of when the catalog entry was created (Erzeugt um/Created at).
          type: string
          format: date-time
          examples:
            - 2025-10-01T10:00:00Z
        updatedAt:
          description: Timestamp of the last update to the catalog entry (Geändert um/Updated at).
          type: string
          format: date-time
          examples:
            - 2025-10-05T14:30:00Z
        title:
          description: Title of the book (Titel/Title).
          type: string
          maxLength: 255
          examples:
            - Test-Driven Development
        publisher:
          description: Publisher of the book (Verlag/Publisher).
          type: string
          maxLength: 55
          examples:
            - Addison-Weasley
        isbn:
          description: ISBN (international standard book number) of the book.
          type: string
          pattern: ^(?:ISBN(?:-13)?:?\ )?(?=[0-9]{13}$|(?=(?:[0-9]+[-\ ]){4})[-\ 0-9]{17}$)97[89][-\ ]?[0-9]{1,5}[-\ ]?[0-9]+[-\ ]?[0-9]+[-\ ]?[0-9]$
          examples:
            - 9780321146530
        publishedOn:
          description: Date the book was published (Veröffentlicht am/Published on).
          type: string
          format: date
          examples:
            - 2003-03-24
        abstract:
          description: Short summary of the book (Kurzfassung/Abstract). Optional (0..1).
          type: string
          maxLength: 1000
        tags:
          description: List of keywords/tags for the book (Stichwort/Tag). Optional (0..n).
          type: array
          items:
            type: string
          examples:
            - Software Development
            - TDD
        book:
          description: Details about the physical or digital book.
          $ref: '#/components/schemas/Book'


    Book:
      description: Book entity, which contains the digital content.
      type: object
      required:
        - digitalContent
      properties:
        digitalContent:
          description: Digital content of the book.
          $ref: '#/components/schemas/DigitalContent'

    DigitalContent:
      description: Contains the digital asset information (media link, format).
      type: object
      required:
        - media
        - format
      properties:
        media:
          description: Link to the media which contains the book.
          type: string
          format: url
          example:
            - 'https://online-library/storage/2024/test-driven-development.epub'
        format:
          description: Format of the according media.
          type: string
          enum:
            - EPUB
            - KINDLE
            - PDF
            - BBEB
            - MOBI
          default: EPUB
          examples:
            - EPUB


    # --- Reused Schemas from Inventory Management Template ---

    MessageHeader:
      description: Header Information for each message
      type: object
      required:
        - correlationId
        - messageId
        - x-api-identifier
        - x-api-version
      properties:
        correlationId:
          description: Identifier to be set by application to trace end-to-end-api-journey
          type: string
          format: uuid
          examples:
            - b3416449-5f69-4cd2-a6c4-1ff82da96bce
        messageId:
          description: Identifier for the particular message, is needed in case of cascading infrastructure
          type: string
          format: uuid
          examples:
            - 5a1d305b-19f3-46eb-ada1-9a9770e56fd1
        x-api-identifier:
          description: Identifier of the API used to create the message
          type: string
          format: uuid
          # Default updated to the new Catalog Management API ID
          default: a82b3d4e-5f6a-7b8c-9d0e-1f2a3b4c5d6e
          examples:
            - a82b3d4e-5f6a-7b8c-9d0e-1f2a3b4c5d6e
        x-api-version:
          description: Version of the API
          type: string
          enum:
            - 2025-1
          default: 2025-1
          examples:
            - 2025-1
        source:
          description: Application name creating the message
          type: string
          minLength: 2
          maxLength: 20
          examples:
            - CatalogManagement

  securitySchemes:
    user-password:
      type: userPassword
      description: Security scheme for events