asyncapi: 3.0.0
info:
  title: Catalog Management
  version: '2025-1'
  description: |
    Events related to the Catalog Management service.
    This service sends events when catalog entries are created, changed, or deleted.
    It also receives events when a new book has been purchased to create a new catalog entry.
  contact:
    name: Annegret Junker
    url: https://online-library.org/sample
    email: annegret.junker@online-library.org
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  tags:
    - name: Catalog Management
      description: All events produced or consumed by Catalog Management
servers:
  event-broker-library:
    host: broker.online-library.org:8092
    protocol: kafka
    description: Event broker of the online library
    security:
      - $ref: '#/components/securitySchemes/user-password'
    bindings:
      kafka:
        schemaRegistryUrl: 'https://online-library-schema-registry.com'
        schemaRegistryVendor: 'confluent'
        bindingVersion: '0.5.0'
channels:
  BookPurchasedChannel:
    address: book-purchased
    messages:
      BookPurchasedEvent:
        $ref: '#/components/messages/BookPurchasedReceive'
    bindings:
      kafka:
        topic: 'book-purchased-event-channel'
        bindingVersion: '0.5.0'
  CatalogEntryCreatedChannel:
    address: catalog-entry-created
    messages:
      CatalogEntryCreatedEvent:
        $ref: '#/components/messages/CatalogEntryCreatedSend'
    bindings:
      kafka:
        topic: 'catalog-entry-created-event-channel'
        bindingVersion: '0.5.0'
  CatalogEntryChangedChannel:
    address: catalog-entry-changed
    messages:
      CatalogEntryChangedEvent:
        $ref: '#/components/messages/CatalogEntryChangedSend'
    bindings:
      kafka:
        topic: 'catalog-entry-changed-event-channel'
        bindingVersion: '0.5.0'
  CatalogEntryDeletedChannel:
    address: catalog-entry-deleted
    messages:
      CatalogEntryDeletedEvent:
        $ref: '#/components/messages/CatalogEntryDeletedSend'
    bindings:
      kafka:
        topic: 'catalog-entry-deleted-event-channel'
        bindingVersion: '0.5.0'
operations:
  BookPurchasedReceiveOperation:
    action: "receive"
    channel:
      $ref: "#/channels/BookPurchasedChannel"
  CatalogEntryCreatedSendOperation:
    action: "send"
    channel:
      $ref: "#/channels/CatalogEntryCreatedChannel"
  CatalogEntryChangedSendOperation:
    action: "send"
    channel:
      $ref: "#/channels/CatalogEntryChangedChannel"
  CatalogEntryDeletedSendOperation:
    action: "send"
    channel:
      $ref: "#/channels/CatalogEntryDeletedChannel"
components:
  messages:
    BookPurchasedReceive:
      summary: Event received when a new book was purchased.
      headers:
        $ref: '#/components/schemas/MessageHeader'
      payload:
        $ref: '#/components/schemas/BookShort'
    CatalogEntryCreatedSend:
      summary: Event sent when a new catalog entry is created.
      headers:
        $ref: '#/components/schemas/MessageHeader'
      payload:
        $ref: '#/components/schemas/CatalogEntry'
    CatalogEntryChangedSend:
      summary: Event sent when an existing catalog entry is changed.
      headers:
        $ref: '#/components/schemas/MessageHeader'
      payload:
        $ref: '#/components/schemas/CatalogEntry'
    CatalogEntryDeletedSend:
      summary: Event sent when a catalog entry is deleted.
      headers:
        $ref: '#/components/schemas/MessageHeader'
      payload:
        type: object
        properties:
          catalogEntryId:
            description: Identifier of the deleted catalog entry
            type: string
            format: uuid
  schemas:
    CatalogEntry:
      description: A single entry in the library catalog.
      type: object
      required:
        - catalogEntryId
        - createdAt
        - updatedAt
        - title
        - authors
        - publisher
        - isbn13
        - publishedOn
      properties:
        catalogEntryId:
          description: Identifier of the catalog entry
          type: string
          format: uuid
        createdAt:
          description: Timestamp when the entry was created
          type: string
          format: date-time
        updatedAt:
          description: Timestamp of the last update
          type: string
          format: date-time
        title:
          description: Title of the book
          type: string
        authors:
          description: Authors of the book
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/Author'
        publisher:
          $ref: '#/components/schemas/Publisher'
        isbn13:
          description: ISBN (international standard book number) with 13 characters
          type: string
          pattern: ^(?:ISBN(?:-13)?:?\ )?(?=[0-9]{13}$|(?=(?:[0-9]+[-\ ]){4})[-\ 0-9]{17}$)97[89][-\ ]?[0-9]{1,5}[-\ ]?[0-9]+[-\ ]?[0-9]+[-\ ]?[0-9]$
        publishedOn:
          description: The date the book was published
          type: string
          format: date
        abstract:
          description: A short summary or abstract of the book
          type: string
        tags:
          description: Tags for categorizing the book
          type: array
          items:
            type: string
    Author:
      description: Author of a book
      type: object
      required:
        - authorId
        - givenName
        - familyName
      properties:
        authorId:
          description: Identifier of the author
          type: string
          format: uuid
        givenName:
          description: Given name of the author
          type: string
        familyName:
          description: Family name of the author
          type: string
    Publisher:
      description: Publisher of a book
      type: object
      required:
        - name
      properties:
        name:
          description: Name of the publisher
          type: string
        city:
          description: Location of the publisher
          type: string
    MessageHeader:
      description: Header Information for each message
      type: object
      required:
        - correlationId
        - messageId
      properties:
        correlationId:
          description: Identifier to trace end-to-end-api-journey
          type: string
          format: uuid
        messageId:
          description: Identifier for the particular message
          type: string
          format: uuid
        source:
          description: Application name creating the message
          type: string
    BookShort:
      description: Book which was purchased by the librarians
      type: object
      required:
        - isbn13
      properties:
        bookIdentifier:
          description: Identifier of a book
          type: string
          format: uuid
        isbn13:
          description: ISBN (international standard book number) with 13 characters
          type: string
          pattern: ^(?:ISBN(?:-13)?:?\ )?(?=[0-9]{13}$|(?=(?:[0-9]+[-\ ]){4})[-\ 0-9]{17}$)97[89][-\ ]?[0-9]{1,5}[-\ ]?[0-9]+[-\ ]?[0-9]+[-\ ]?[0-9]$
        authors:
          description: Authors of the book
          minItems: 1
          items:
            $ref: '#/components/schemas/AuthorShort'
        title:
          description: Title of the book
          type: string
    AuthorShort:
      description: Author of a book
      type: object
      required:
        - authorId
        - givenName
        - familyName
      properties:
        authorId:
          description: Identifier of the author
          type: string
          format: uuid
        givenName:
          description: Given name of the author
          type: string
        familyName:
          description: Family name of the author
          type: string
  securitySchemes:
    user-password:
      type: userPassword
      description: Security scheme for events