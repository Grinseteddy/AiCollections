openapi: 3.1.0
info:
  title: Catalog Management API
  description: This API allows librarians to manage entries in the library catalog. It supports creating, reading, updating, and deleting catalog entries, as well as managing their specific attributes like abstracts and tags.
  version: '2025-1'
  contact:
    name: Annegret Junker

servers:
  - url: https://apis.online-library.org/catalog-management
    description: Production Server

security:
  - openIdConnect:
      - catalog:read
      - catalog:write

tags:
  - name: Catalog
    description: Operations for managing catalog entries.

paths:
  /catalog-entries:
    get:
      summary: List Catalog Entries
      description: Responds with a list of catalog entries, optionally filtered by search criteria.
      operationId: getCatalogEntries
      tags:
        - Catalog
      parameters:
        - $ref: '#/components/parameters/VersionParameter'
        - name: title
          in: query
          description: Filter by book title
          schema:
            type: string
        - name: author
          in: query
          description: Filter by author name
          schema:
            type: string
        - name: isbn
          in: query
          description: Filter by ISBN
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/CatalogEntryListResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'

    post:
      summary: Create a Catalog Entry
      description: Creates a new catalog entry.
      operationId: createCatalogEntry
      tags:
        - Catalog
      parameters:
        - $ref: '#/components/parameters/VersionParameter'
      requestBody:
        $ref: '#/components/requestBodies/CatalogEntryCreateRequest'
      responses:
        '201':
          $ref: '#/components/responses/CatalogEntryCreatedResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'

  /catalog-entries/{catalogEntryId}:
    get:
      summary: Get Catalog Entry by ID
      description: Responds with a single catalog entry identified by its ID.
      operationId: getCatalogEntryById
      tags:
        - Catalog
      parameters:
        - $ref: '#/components/parameters/CatalogEntryIdParameter'
        - $ref: '#/components/parameters/VersionParameter'
      responses:
        '200':
          $ref: '#/components/responses/CatalogEntryResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'

    put:
      summary: Update a Catalog Entry
      description: Updates an entire catalog entry with the information provided in the request body.
      operationId: updateCatalogEntry
      tags:
        - Catalog
      parameters:
        - $ref: '#/components/parameters/CatalogEntryIdParameter'
        - $ref: '#/components/parameters/VersionParameter'
      requestBody:
        $ref: '#/components/requestBodies/CatalogEntryCreateRequest' # A PUT replaces the resource, so it uses the same schema as POST
      responses:
        '200':
          $ref: '#/components/responses/CatalogEntryResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'

    delete:
      summary: Delete a Catalog Entry
      description: Deletes a catalog entry identified by its ID.
      operationId: deleteCatalogEntry
      tags:
        - Catalog
      parameters:
        - $ref: '#/components/parameters/CatalogEntryIdParameter'
        - $ref: '#/components/parameters/VersionParameter'
      responses:
        '204':
          $ref: '#/components/responses/NoContentResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'

  /catalog-entries/{catalogEntryId}/abstract:
    put:
      summary: Update an Entry's Abstract
      description: Updates the abstract for a specific catalog entry.
      operationId: updateAbstract
      tags:
        - Catalog
      parameters:
        - $ref: '#/components/parameters/CatalogEntryIdParameter'
        - $ref: '#/components/parameters/VersionParameter'
      requestBody:
        $ref: '#/components/requestBodies/AbstractUpdateRequest'
      responses:
        '200':
          $ref: '#/components/responses/CatalogEntryResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'

  /catalog-entries/{catalogEntryId}/tags:
    put:
      summary: Update an Entry's Tags
      description: Updates the list of tags for a specific catalog entry.
      operationId: updateTags
      tags:
        - Catalog
      parameters:
        - $ref: '#/components/parameters/CatalogEntryIdParameter'
        - $ref: '#/components/parameters/VersionParameter'
      requestBody:
        $ref: '#/components/requestBodies/TagsUpdateRequest'
      responses:
        '200':
          $ref: '#/components/responses/CatalogEntryResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'

components:
  parameters:
    CatalogEntryIdParameter:
      name: catalogEntryId
      in: path
      required: true
      description: The unique identifier of the catalog entry.
      schema:
        type: string
        format: uuid

    VersionParameter:
      name: x-version
      in: header
      required: true
      description: The API version for the request.
      schema:
        type: string
        enum: ['2025-1']
        default: '2025-1'

  schemas:
    CatalogEntry:
      type: object
      description: A complete library catalog entry.
      required:
        - id
        - title
        - authors
        - publisher
        - isbn
        - publishedOn
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the catalog entry.
          readOnly: true
        title:
          type: string
          description: The title of the book.
        authors:
          type: array
          description: A list of authors for the book.
          items:
            type: string
        publisher:
          type: string
          description: The publisher of the book.
        isbn:
          type: string
          description: The International Standard Book Number.
        publishedOn:
          type: string
          format: date
          description: The date the book was published.
        abstract:
          type: string
          description: A short summary of the book.
        tags:
          type: array
          description: A list of tags or keywords associated with the book.
          items:
            type: string
        createdAt:
          type: string
          format: date-time
          description: The timestamp of when the entry was created.
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          description: The timestamp of the last update to the entry.
          readOnly: true

    CatalogEntryCreate:
      type: object
      description: The data required to create a new catalog entry.
      required:
        - title
        - authors
        - publisher
        - isbn
        - publishedOn
      properties:
        title:
          type: string
          description: The title of the book.
        authors:
          type: array
          description: A list of authors for the book.
          items:
            type: string
        publisher:
          type: string
          description: The publisher of the book.
        isbn:
          type: string
          description: The International Standard Book Number.
        publishedOn:
          type: string
          format: date
          description: The date the book was published.
        abstract:
          type: string
          description: A short summary of the book.
        tags:
          type: array
          description: A list of tags or keywords associated with the book.
          items:
            type: string

    AbstractUpdate:
      type: object
      required:
        - abstract
      properties:
        abstract:
          type: string
          description: The new abstract text.

    TagsUpdate:
      type: object
      required:
        - tags
      properties:
        tags:
          type: array
          description: The complete new list of tags.
          items:
            type: string

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
        message:
          type: string
        details:
          type: object

  responses:
    CatalogEntryResponse:
      description: A single catalog entry.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CatalogEntry'

    CatalogEntryListResponse:
      description: A list of catalog entries.
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/CatalogEntry'

    CatalogEntryCreatedResponse:
      description: The catalog entry was created successfully. The `Location` header contains the URL of the new resource.
      headers:
        Location:
          description: The URL of the newly created catalog entry.
          schema:
            type: string
            format: uri
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CatalogEntry'

    NoContentResponse:
      description: The resource was deleted successfully.

    BadRequestResponse:
      description: The request was malformed or invalid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    NotFoundResponse:
      description: The requested resource could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    ForbiddenResponse:
      description: The client is not authorized to perform this action.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    ServiceNotAvailableResponse:
      description: The service is temporarily unavailable.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  requestBodies:
    CatalogEntryCreateRequest:
      description: Data for creating or updating a catalog entry.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CatalogEntryCreate'

    AbstractUpdateRequest:
      description: Data for updating the abstract of a catalog entry.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AbstractUpdate'

    TagsUpdateRequest:
      description: Data for updating the tags of a catalog entry.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TagsUpdate'

  securitySchemes:
    openIdConnect:
      type: openIdConnect
      description: Access to catalog management via OpenID Connect.
      openIdConnectUrl: https://auth.online-library.org/.well-known/openid-configuration
  
