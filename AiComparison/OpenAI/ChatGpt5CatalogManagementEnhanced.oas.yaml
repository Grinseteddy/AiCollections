openapi: 3.1.0
info:
  title: Catalog Management API
  description: >
    API that allows librarians to manage catalog entries (create, read, update, delete)
    and maintain abstracts and tags for recommendations.
  version: "2025-1"
  contact:
    name: Annegret Junker
  x-api-id: 2e27f2a1-6b1a-4a7a-9a9e-0d1a9c0c8d11
  x-audience: external-public

servers:
  - url: https://apis.online-library.org/catalog-management

security:
  - openIdConnect:
      - catalog:read
      - catalog:write

tags:
  - name: Catalog Entries
    description: Operations on catalog entries
  - name: Abstracts
    description: Maintain abstracts of catalog entries
  - name: Tags
    description: Maintain tags of catalog entries

paths:
  /catalog-entries:
    get:
      description: Returns a list of catalog entries filtered by an optional search query.
      operationId: listCatalogEntries
      tags: [Catalog Entries]
      security:
        - openIdConnect: [catalog:read]
      parameters:
        - $ref: '#/components/parameters/SearchParameter'
        - $ref: '#/components/parameters/VersionParameter'
      responses:
        '200':
          $ref: '#/components/responses/CatalogEntryListResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'
        default:
          $ref: '#/components/responses/DefaultResponse'
    post:
      description: Creates a new catalog entry.
      operationId: createCatalogEntry
      tags: [Catalog Entries]
      security:
        - openIdConnect: [catalog:write]
      parameters:
        - $ref: '#/components/parameters/VersionParameter'
      requestBody:
        $ref: '#/components/requestBodies/CatalogEntryCreateRequest'
      responses:
        '201':
          $ref: '#/components/responses/CatalogEntryCreatedResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'
        default:
          $ref: '#/components/responses/DefaultResponse'

  /catalog-entries/{catalogEntryId}:
    get:
      description: Returns a catalog entry by its identifier.
      operationId: getCatalogEntryById
      tags: [Catalog Entries]
      security:
        - openIdConnect: [catalog:read]
      parameters:
        - $ref: '#/components/parameters/VersionParameter'
        - $ref: '#/components/parameters/CatalogEntryIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/CatalogEntryResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'
        default:
          $ref: '#/components/responses/DefaultResponse'
    put:
      description: Updates a catalog entry. Fields not provided remain unchanged.
      operationId: updateCatalogEntry
      tags: [Catalog Entries]
      security:
        - openIdConnect: [catalog:write]
      parameters:
        - $ref: '#/components/parameters/VersionParameter'
        - $ref: '#/components/parameters/CatalogEntryIdParameter'
      requestBody:
        $ref: '#/components/requestBodies/CatalogEntryUpdateRequest'
      responses:
        '200':
          $ref: '#/components/responses/CatalogEntryResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'
        default:
          $ref: '#/components/responses/DefaultResponse'
    delete:
      description: Deletes a catalog entry.
      operationId: deleteCatalogEntry
      tags: [Catalog Entries]
      security:
        - openIdConnect: [catalog:write]
      parameters:
        - $ref: '#/components/parameters/VersionParameter'
        - $ref: '#/components/parameters/CatalogEntryIdParameter'
      responses:
        '204':
          description: Catalog entry deleted successfully.
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'
        default:
          $ref: '#/components/responses/DefaultResponse'

  /catalog-entries/{catalogEntryId}/abstracts:
    put:
      description: Creates or replaces the abstract of a catalog entry.
      operationId: upsertAbstract
      tags: [Abstracts]
      security:
        - openIdConnect: [catalog:write]
      parameters:
        - $ref: '#/components/parameters/VersionParameter'
        - $ref: '#/components/parameters/CatalogEntryIdParameter'
      requestBody:
        $ref: '#/components/requestBodies/AbstractUpdateRequest'
      responses:
        '200':
          $ref: '#/components/responses/AbstractResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'
        default:
          $ref: '#/components/responses/DefaultResponse'

  /catalog-entries/{catalogEntryId}/tags:
    put:
      description: Replaces the tag set of a catalog entry.
      operationId: replaceTags
      tags: [Tags]
      security:
        - openIdConnect: [catalog:write]
      parameters:
        - $ref: '#/components/parameters/VersionParameter'
        - $ref: '#/components/parameters/CatalogEntryIdParameter'
      requestBody:
        $ref: '#/components/requestBodies/TagsUpdateRequest'
      responses:
        '200':
          $ref: '#/components/responses/TagsResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'
        default:
          $ref: '#/components/responses/DefaultResponse'

components:
  parameters:
    CatalogEntryIdParameter:
      name: catalogEntryId
      in: path
      description: Identifier of a catalog entry
      required: true
      schema:
        type: string
        format: uuid
        examples: [ "3114e925-6fa4-4805-ae11-4e7b810066e3" ]
    SearchParameter:
      name: q
      in: query
      description: Free-text search across title, author, publisher, ISBN, tags.
      schema:
        type: string
        minLength: 1
    VersionParameter:
      name: x-api-version
      in: header
      required: true
      description: Expected API version from the client.
      schema:
        type: string
        default: "2025-1"
        x-extensible-enum: ["2025-1"]

  requestBodies:
    CatalogEntryCreateRequest:
      description: Catalog entry to be created.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CatalogEntryToBeCreated'
    CatalogEntryUpdateRequest:
      description: Fields to update for the catalog entry.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CatalogEntryUpdate'
    AbstractUpdateRequest:
      description: Abstract text to set on the catalog entry.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Abstract'
    TagsUpdateRequest:
      description: Complete set of tags to assign to the catalog entry.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Tags'

  responses:
    CatalogEntryResponse:
      description: A single catalog entry.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CatalogEntry'
    CatalogEntryListResponse:
      description: A list of catalog entries.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CatalogEntryList'
    CatalogEntryCreatedResponse:
      description: Catalog entry created successfully.
      headers:
        Location:
          description: URI of the created catalog entry.
          schema:
            type: string
            format: uri
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CatalogEntryLink'
    AbstractResponse:
      description: The updated abstract.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Abstract'
    TagsResponse:
      description: The updated tags.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Tags'
    BadRequestResponse:
      description: Invalid request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFoundResponse:
      description: Resource not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ForbiddenResponse:
      description: Access forbidden (only librarians may modify entries).
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ServiceNotAvailableResponse:
      description: Service unavailable.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    DefaultResponse:
      description: General error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  schemas:
    CatalogEntry:
      description: A catalog entry containing book metadata.
      type: object
      required:
        - id
        - title
        - authors
        - publisher
        - isbn
        - publishedOn
      properties:
        id:
          description: Identifier of the catalog entry.
          type: string
          format: uuid
          examples: [ "3114e925-6fa4-4805-ae11-4e7b810066e3" ]
        title:
          $ref: '#/components/schemas/Title'
        authors:
          description: One or more authors.
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/Author'
        publisher:
          $ref: '#/components/schemas/Publisher'
        isbn:
          $ref: '#/components/schemas/ISBN'
        publishedOn:
          $ref: '#/components/schemas/PublishedOn'
        abstract:
          $ref: '#/components/schemas/Abstract'
        tags:
          $ref: '#/components/schemas/Tags'
        createdAt:
          description: Creation timestamp.
          type: string
          format: date-time
          examples: [ "2025-10-06T13:24:00Z" ]
        updatedAt:
          description: Last update timestamp.
          type: string
          format: date-time
          examples: [ "2025-10-06T13:24:00Z" ]

    CatalogEntryToBeCreated:
      description: Payload to create a catalog entry.
      type: object
      required:
        - title
        - authors
        - publisher
        - isbn
        - publishedOn
      properties:
        title:
          $ref: '#/components/schemas/Title'
        authors:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/Author'
        publisher:
          $ref: '#/components/schemas/Publisher'
        isbn:
          $ref: '#/components/schemas/ISBN'
        publishedOn:
          $ref: '#/components/schemas/PublishedOn'
        abstract:
          $ref: '#/components/schemas/Abstract'
        tags:
          $ref: '#/components/schemas/Tags'

    CatalogEntryUpdate:
      description: Partial update for a catalog entry.
      type: object
      properties:
        title:
          $ref: '#/components/schemas/Title'
        authors:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/Author'
        publisher:
          $ref: '#/components/schemas/Publisher'
        isbn:
          $ref: '#/components/schemas/ISBN'
        publishedOn:
          $ref: '#/components/schemas/PublishedOn'
        abstract:
          $ref: '#/components/schemas/Abstract'
        tags:
          $ref: '#/components/schemas/Tags'

    CatalogEntryList:
      description: List wrapper for catalog entries.
      type: object
      required: [catalogEntries]
      properties:
        catalogEntries:
          type: array
          items:
            $ref: '#/components/schemas/CatalogEntry'
          minItems: 0
          maxItems: 1024

    CatalogEntryLink:
      description: Link to a catalog entry.
      type: object
      required: [catalogEntryLink]
      properties:
        catalogEntryLink:
          type: string
          format: uri
          examples:
            - https://apis.online-library.org/catalog-management/catalog-entries/3114e925-6fa4-4805-ae11-4e7b810066e3

    # Primitive sub-schemas derived from Visual Glossary
    Author:
      description: Author's display name.
      type: string
      minLength: 1
      examples: [ "Ursula K. Le Guin" ]
    Title:
      description: Title of the book.
      type: string
      minLength: 1
      maxLength: 512
      examples: [ "The Left Hand of Darkness" ]
    Publisher:
      description: Publisher of the book.
      type: string
      minLength: 1
      maxLength: 256
      examples: [ "Ace Books" ]
    ISBN:
      description: International Standard Book Number.
      type: string
      pattern: '^[0-9Xx-]{10,17}$'
      examples: [ "978-0-441-47812-5" ]
    PublishedOn:
      description: Publication date.
      type: string
      format: date
      examples: [ "1969-03-01" ]
    Abstract:
      description: Short summary of the catalog entry.
      type: string
      maxLength: 5000
      nullable: true
      examples: [ "A classic science fiction novel exploring gender and society." ]
    Tags:
      description: Tags used for recommendations and categorization.
      type: array
      items:
        type: string
        minLength: 1
      minItems: 0
      uniqueItems: true
      examples:
        - [ "science-fiction", "classic", "anthropology" ]

    Error:
      description: Standard error object.
      type: object
      required: [code, title]
      properties:
        code:
          description: Short error code.
          type: string
          minLength: 2
          maxLength: 10
          examples: [ "CAT-001" ]
        title:
          description: Human-readable error message.
          type: string
          minLength: 2
          maxLength: 256
          examples: [ "Catalog entry not found." ]
        detail:
          description: Optional link or identifier related to the error.
          type: string
        severity:
          description: Severity of the error.
          type: string
          x-extensible-enum: [FATAL, ERROR, WARNING, INFO]
          default: ERROR
        timestamp:
          description: Timestamp of the error occurrence.
          type: string
          format: date-time

  securitySchemes:
    openIdConnect:
      description: Access to Catalog Management via OpenID Connect.
      type: openIdConnect
      openIdConnectUrl: https://auth.online-library.org/.well-known/openid-configuration


  
