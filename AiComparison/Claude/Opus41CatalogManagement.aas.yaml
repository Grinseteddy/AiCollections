asyncapi: 3.0.0
info:
  title: Catalog Management
  version: 2025-1
  description: |
    Events produced and consumed by the Catalog Management service.
    
    The service manages catalog entries and allows librarians to:
    - Manage catalog entries
    - Tag books for recommendations
    
    The service produces the following domain events:
    - Catalog Entry Created
    - Catalog Entry Changed  
    - Catalog Entry Deleted
    
    The service consumes the following domain events:
    - Book Purchased
  contact:
    name: Annegret Junker
    url: https://online-library.org/catalog-management
    email: annegret.junker@online-library.org
  x-api-id: 8a2f5c3e-7b4d-4e9a-b6c1-9d8e7f6a5b4c
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  tags:
    - name: Catalog Management
      description: All events related to catalog management operations
    - name: Inventory
      description: Events consumed from inventory management

servers:
  event-broker-library:
    host: broker.online-library.org:8092
    protocol: kafka
    description: Event broker of the online library for Catalog Management
    security:
      - $ref: '#/components/securitySchemes/user-password'
    bindings:
      kafka:
        schemaRegistryUrl: 'https://online-library-schema-registry.com'
        schemaRegistryVendor: 'confluent'
        bindingVersion: '0.5.0'

channels:
  BookPurchasedChannel:
    description: Channel for receiving book purchased events from Inventory Management
    address: book-purchased
    messages:
      BookPurchasedEvent:
        $ref: '#/components/messages/BookPurchasedReceive'
    bindings:
      kafka:
        topic: 'book-purchased-event-channel'
        bindingVersion: '0.5.0'

  CatalogEntryCreatedChannel:
    description: Channel for catalog entry created events
    address: catalog-entry-created
    messages:
      CatalogEntryCreatedEvent:
        $ref: '#/components/messages/CatalogEntryCreatedSend'
    bindings:
      kafka:
        topic: 'catalog-entry-created-event-channel'
        bindingVersion: '0.5.0'

  CatalogEntryChangedChannel:
    description: Channel for catalog entry changed/updated events
    address: catalog-entry-changed
    messages:
      CatalogEntryChangedEvent:
        $ref: '#/components/messages/CatalogEntryChangedSend'
    bindings:
      kafka:
        topic: 'catalog-entry-changed-event-channel'
        bindingVersion: '0.5.0'

  CatalogEntryDeletedChannel:
    description: Channel for catalog entry deleted events
    address: catalog-entry-deleted
    messages:
      CatalogEntryDeletedEvent:
        $ref: '#/components/messages/CatalogEntryDeletedSend'
    bindings:
      kafka:
        topic: 'catalog-entry-deleted-event-channel'
        bindingVersion: '0.5.0'

operations:
  BookPurchasedReceiveOperation:
    description: Receive book purchased events to potentially create catalog entries automatically
    action: "receive"
    channel:
      $ref: "#/channels/BookPurchasedChannel"
    bindings:
      kafka:
        bindingVersion: '0.5.0'
        groupId:
          type: string
          pattern: ^cg-catalog-book-purchased-.*$

  CatalogEntryCreatedSendOperation:
    description: Send event when a new catalog entry is created
    action: "send"
    channel:
      $ref: "#/channels/CatalogEntryCreatedChannel"
    bindings:
      kafka:
        bindingVersion: '0.5.0'

  CatalogEntryChangedSendOperation:
    description: Send event when a catalog entry is changed or updated
    action: "send"
    channel:
      $ref: "#/channels/CatalogEntryChangedChannel"
    bindings:
      kafka:
        bindingVersion: '0.5.0'

  CatalogEntryDeletedSendOperation:
    description: Send event when a catalog entry is deleted
    action: "send"
    channel:
      $ref: "#/channels/CatalogEntryDeletedChannel"
    bindings:
      kafka:
        bindingVersion: '0.5.0'

components:
  messages:
    BookPurchasedReceive:
      description: Book purchased event received from Inventory Management
      headers:
        $ref: '#/components/schemas/MessageHeader'
      payload:
        $ref: '#/components/schemas/Book'

    CatalogEntryCreatedSend:
      description: Event sent when a new catalog entry is created
      headers:
        $ref: '#/components/schemas/MessageHeader'
      payload:
        $ref: '#/components/schemas/CatalogEntry'

    CatalogEntryChangedSend:
      description: Event sent when a catalog entry is changed
      headers:
        $ref: '#/components/schemas/MessageHeader'
      payload:
        $ref: '#/components/schemas/CatalogEntry'

    CatalogEntryDeletedSend:
      description: Event sent when a catalog entry is deleted
      headers:
        $ref: '#/components/schemas/MessageHeader'
      payload:
        $ref: '#/components/schemas/CatalogEntryDeleted'

  schemas:
    MessageHeader:
      description: Header Information for each message
      type: object
      required:
        - correlationId
        - messageId
        - x-api-identifier
        - x-api-version
      properties:
        correlationId:
          description: Identifier to be set by application to trace end-to-end-api-journey
          type: string
          format: uuid
          examples:
            - b3416449-5f69-4cd2-a6c4-1ff82da96bce
        messageId:
          description: Identifier for the particular message, is needed in case of cascading infrastructure
          type: string
          format: uuid
          examples:
            - 5a1d305b-19f3-46eb-ada1-9a9770e56fd1
        x-api-identifier:
          description: Identifier of the API used to create the message
          type: string
          format: uuid
          default: 8a2f5c3e-7b4d-4e9a-b6c1-9d8e7f6a5b4c
          examples:
            - 8a2f5c3e-7b4d-4e9a-b6c1-9d8e7f6a5b4c
        x-api-version:
          description: Version of the API
          type: string
          x-extensible-enum:
            - 2025-1
          default: 2025-1
          examples:
            - 2025-1
        source:
          description: Application name creating the message
          type: string
          minLength: 2
          maxLength: 30
          examples:
            - CatalogManagement

    Book:
      description: Book entity received from inventory/purchase events
      type: object
      required:
        - isbn
        - title
        - authors
      properties:
        isbn:
          description: ISBN (International Standard Book Number)
          type: string
          pattern: ^(?:ISBN(?:-13)?:?\ )?(?=[0-9]{13}$|(?=(?:[0-9]+[-\ ]){4})[-\ 0-9]{17}$)97[89][-\ ]?[0-9]{1,5}[-\ ]?[0-9]+[-\ ]?[0-9]+[-\ ]?[0-9]$
          examples:
            - 9780321146530
            - ISBN 978-0321-14653-0
        title:
          description: Title of the book
          type: string
          minLength: 2
          maxLength: 255
          examples:
            - Test-Driven Development
        authors:
          description: Authors of the book
          type: array
          minItems: 1
          maxItems: 10
          items:
            $ref: '#/components/schemas/Author'
        publisher:
          description: Publisher of the book
          type: string
          minLength: 2
          maxLength: 100
          examples:
            - Addison-Wesley
            - Springer Nature
        publishedOn:
          description: Publication date of the book
          type: string
          format: date
          examples:
            - "2024-03-15"
        digitalContent:
          $ref: '#/components/schemas/DigitalContent'

    CatalogEntry:
      description: Catalog entry for a book in the library system
      type: object
      required:
        - catalogEntryId
        - isbn
        - title
        - authors
        - createdAt
      properties:
        catalogEntryId:
          description: Unique identifier for the catalog entry
          type: string
          format: uuid
          examples:
            - c7d9e8a5-4b3c-4f2a-9e1d-6c5b4a3d2e1f
        isbn:
          description: ISBN of the book
          type: string
          pattern: ^(?:ISBN(?:-13)?:?\ )?(?=[0-9]{13}$|(?=(?:[0-9]+[-\ ]){4})[-\ 0-9]{17}$)97[89][-\ ]?[0-9]{1,5}[-\ ]?[0-9]+[-\ ]?[0-9]+[-\ ]?[0-9]$
          examples:
            - 9780321146530
        title:
          description: Title of the book
          type: string
          minLength: 2
          maxLength: 255
          examples:
            - Test-Driven Development
        authors:
          description: Authors of the book
          type: array
          minItems: 1
          maxItems: 10
          items:
            $ref: '#/components/schemas/Author'
        publisher:
          description: Publisher of the book
          type: string
          minLength: 2
          maxLength: 100
          examples:
            - Addison-Wesley
        publishedOn:
          description: Publication date
          type: string
          format: date
          examples:
            - "2024-03-15"
        abstract:
          description: Abstract or summary of the book
          type: string
          minLength: 10
          maxLength: 5000
          examples:
            - "This book teaches programmers how to write better code through test-driven development..."
        tags:
          description: Tags for categorization and recommendations
          type: array
          minItems: 0
          maxItems: 20
          items:
            $ref: '#/components/schemas/Tag'
        digitalContent:
          $ref: '#/components/schemas/DigitalContent'
        createdAt:
          description: Timestamp when the catalog entry was created
          type: string
          format: date-time
          examples:
            - "2024-03-15T10:30:00Z"
        updatedAt:
          description: Timestamp when the catalog entry was last updated
          type: string
          format: date-time
          examples:
            - "2024-03-16T14:45:00Z"
        isVerifiedByLibrarian:
          description: Indicates if the entry has been verified by a librarian
          type: boolean
          default: false
          examples:
            - true
        isCategorized:
          description: Indicates if the entry has been properly categorized
          type: boolean
          default: false
          examples:
            - true

    CatalogEntryDeleted:
      description: Payload for catalog entry deletion events
      type: object
      required:
        - catalogEntryId
        - deletedAt
      properties:
        catalogEntryId:
          description: Unique identifier of the deleted catalog entry
          type: string
          format: uuid
          examples:
            - c7d9e8a5-4b3c-4f2a-9e1d-6c5b4a3d2e1f
        isbn:
          description: ISBN of the deleted book entry
          type: string
          examples:
            - 9780321146530
        title:
          description: Title of the deleted book entry
          type: string
          examples:
            - Test-Driven Development
        deletedAt:
          description: Timestamp when the catalog entry was deleted
          type: string
          format: date-time
          examples:
            - "2024-03-17T09:15:00Z"
        deletedBy:
          description: User or system that deleted the entry
          type: string
          examples:
            - librarian-123
            - system-auto-cleanup
        reason:
          description: Reason for deletion
          type: string
          examples:
            - "Duplicate entry"
            - "Book no longer available"

    Author:
      description: Author information
      type: object
      required:
        - name
      properties:
        authorId:
          description: Unique identifier for the author
          type: string
          format: uuid
          examples:
            - 08a13654-05f3-4664-8c8d-fdd9114ec3be
        name:
          description: Full name of the author
          type: string
          minLength: 2
          maxLength: 100
          examples:
            - Kent Beck
            - Martin Fowler
        givenName:
          description: Given/first name of the author
          type: string
          minLength: 1
          maxLength: 55
          examples:
            - Kent
            - Martin
        familyName:
          description: Family/last name of the author
          type: string
          minLength: 1
          maxLength: 55
          examples:
            - Beck
            - Fowler

    Tag:
      description: Tag for categorization and recommendations
      type: object
      required:
        - tagName
      properties:
        tagId:
          description: Unique identifier for the tag
          type: string
          format: uuid
          examples:
            - 4a5b6c7d-8e9f-0a1b-2c3d-4e5f6a7b8c9d
        tagName:
          description: Name of the tag
          type: string
          minLength: 1
          maxLength: 50
          examples:
            - "software-development"
            - "testing"
            - "agile"
        tagCategory:
          description: Category of the tag
          type: string
          enum:
            - subject
            - genre
            - audience
            - language
            - recommendation
          examples:
            - subject

    DigitalContent:
      description: Digital content information for the book
      type: object
      properties:
        contentId:
          description: Unique identifier for the digital content
          type: string
          format: uuid
          examples:
            - 9f8e7d6c-5b4a-3c2d-1e0f-9a8b7c6d5e4f
        mediaUrl:
          description: URL to the digital content
          type: string
          format: uri
          examples:
            - https://online-library.org/content/2024/test-driven-development.epub
        format:
          description: Format of the digital content
          type: string
          x-extensible-enum:
            - EPUB
            - KINDLE
            - PDF
            - BBEB
            - MOBI
            - AUDIOBOOK
          examples:
            - EPUB
        fileSize:
          description: File size in bytes
          type: integer
          minimum: 0
          examples:
            - 2458624
        checksum:
          description: SHA-256 checksum of the file
          type: string
          examples:
            - "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
        isAvailable:
          description: Indicates if the digital content is currently available
          type: boolean
          default: true
          examples:
            - true

  securitySchemes:
    user-password:
      type: userPassword
      description: Security scheme for Catalog Management events