asyncapi: 3.0.0
info:
  title: Catalog Management
  version: 2025-1
  description: |
    Events produced and consumed by the Catalog Management service.
    The service handles the following domain events:
      - Catalog Entry Created (send)
      - Catalog Entry Changed (send)
      - Catalog Entry Deleted (send)
      - Book Purchased (receive)
    
    Catalog Management allows librarians to manage catalog entries and tag books for recommendations.
  contact:
    name: Annegret Junker
    url: https://apis.online-library.org/catalog-management
    email: annegret.junker@online-library.org
  x-api-id: a8f2c19e-7d4b-4e2a-9f1c-5b8e3d2a6f7c
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  tags:
    - name: Catalog Management
      description: All events produced and consumed by Catalog Management
    - name: Catalog Entry
      description: Events related to catalog entry lifecycle

servers:
  event-broker-library:
    host: broker.online-library.org:8092
    protocol: kafka
    description: Event broker of the online library
    security:
      - $ref: '#/components/securitySchemes/user-password'
    bindings:
      kafka:
        schemaRegistryUrl: 'https://online-library-schema-registry.com'
        schemaRegistryVendor: 'confluent'
        bindingVersion: '0.5.0'

channels:
  CatalogEntryCreatedChannel:
    description: Channel where messages are stored when a catalog entry was created
    address: catalog-entry-created
    messages:
      CatalogEntryCreatedEvent:
        $ref: '#/components/messages/CatalogEntryCreatedSend'
    bindings:
      kafka:
        topic: 'catalog-entry-created-event-channel'
        bindingVersion: '0.5.0'

  CatalogEntryChangedChannel:
    description: Channel where messages are stored when a catalog entry was updated
    address: catalog-entry-changed
    messages:
      CatalogEntryChangedEvent:
        $ref: '#/components/messages/CatalogEntryChangedSend'
    bindings:
      kafka:
        topic: 'catalog-entry-changed-event-channel'
        bindingVersion: '0.5.0'

  CatalogEntryDeletedChannel:
    description: Channel where messages are stored when a catalog entry was deleted
    address: catalog-entry-deleted
    messages:
      CatalogEntryDeletedEvent:
        $ref: '#/components/messages/CatalogEntryDeletedSend'
    bindings:
      kafka:
        topic: 'catalog-entry-deleted-event-channel'
        bindingVersion: '0.5.0'

  BookPurchasedChannel:
    description: Channel where messages are received when a book was purchased
    address: book-purchased
    messages:
      BookPurchasedEvent:
        $ref: '#/components/messages/BookPurchasedReceive'
    bindings:
      kafka:
        topic: 'book-purchased-event-channel'
        bindingVersion: '0.5.0'

operations:
  CatalogEntryCreatedSendOperation:
    description: Event sent by Catalog Management when a new catalog entry was created
    action: send
    channel:
      $ref: '#/channels/CatalogEntryCreatedChannel'
    bindings:
      kafka:
        bindingVersion: '0.5.0'
        groupId:
          type: string
          pattern: ^cg-catalog-entry-created-.*$

  CatalogEntryChangedSendOperation:
    description: Event sent by Catalog Management when a catalog entry was updated
    action: send
    channel:
      $ref: '#/channels/CatalogEntryChangedChannel'
    bindings:
      kafka:
        bindingVersion: '0.5.0'
        groupId:
          type: string
          pattern: ^cg-catalog-entry-changed-.*$

  CatalogEntryDeletedSendOperation:
    description: Event sent by Catalog Management when a catalog entry was deleted
    action: send
    channel:
      $ref: '#/channels/CatalogEntryDeletedChannel'
    bindings:
      kafka:
        bindingVersion: '0.5.0'
        groupId:
          type: string
          pattern: ^cg-catalog-entry-deleted-.*$

  BookPurchasedReceiveOperation:
    description: Event received by Catalog Management when a book was purchased
    action: receive
    channel:
      $ref: '#/channels/BookPurchasedChannel'
    bindings:
      kafka:
        bindingVersion: '0.5.0'
        groupId:
          type: string
          enum:
            - cg-catalog-management-book-purchased

components:
  messages:
    CatalogEntryCreatedSend:
      headers:
        $ref: '#/components/schemas/MessageHeader'
      payload:
        $ref: '#/components/schemas/CatalogEntry'

    CatalogEntryChangedSend:
      headers:
        $ref: '#/components/schemas/MessageHeader'
      payload:
        $ref: '#/components/schemas/CatalogEntry'

    CatalogEntryDeletedSend:
      headers:
        $ref: '#/components/schemas/MessageHeader'
      payload:
        $ref: '#/components/schemas/CatalogEntryDeleted'

    BookPurchasedReceive:
      headers:
        $ref: '#/components/schemas/MessageHeader'
      payload:
        $ref: '#/components/schemas/Book'

  schemas:
    CatalogEntry:
      description: Complete catalog entry with all metadata
      type: object
      required:
        - catalogEntryId
        - isbn
        - title
        - authors
        - createdAt
      properties:
        catalogEntryId:
          description: Unique identifier of the catalog entry
          type: string
          format: uuid
          examples:
            - 3f8a2c1d-5e9b-4f7a-a1d3-6c8e2b4f9a7d
        isbn:
          description: ISBN (International Standard Book Number) with 13 characters
          type: string
          pattern: ^(?:ISBN(?:-13)?:?\ )?(?=[0-9]{13}$|(?=(?:[0-9]+[-\ ]){4})[-\ 0-9]{17}$)97[89][-\ ]?[0-9]{1,5}[-\ ]?[0-9]+[-\ ]?[0-9]+[-\ ]?[0-9]$
          examples:
            - '9780321146530'
            - 'ISBN 978-0321-14653-0'
        title:
          description: Title of the book
          type: string
          minLength: 2
          maxLength: 255
          examples:
            - Test-Driven Development
        authors:
          description: Authors of the book
          type: array
          minItems: 1
          maxItems: 10
          items:
            $ref: '#/components/schemas/Author'
        publisher:
          $ref: '#/components/schemas/Publisher'
        publishedOn:
          description: Publication date
          type: string
          format: date
          examples:
            - '2002-11-08'
        abstract:
          description: Short abstract or summary of the book
          type: string
          minLength: 10
          maxLength: 2000
          examples:
            - A comprehensive guide to test-driven development practices
        tags:
          description: Tags for categorization and recommendations
          type: array
          minItems: 0
          maxItems: 20
          items:
            $ref: '#/components/schemas/Tag'
        digitalContent:
          $ref: '#/components/schemas/DigitalContent'
        createdAt:
          description: Timestamp when the catalog entry was created
          type: string
          format: date-time
          examples:
            - '2025-10-05T10:30:00Z'
        updatedAt:
          description: Timestamp when the catalog entry was last updated
          type: string
          format: date-time
          examples:
            - '2025-10-05T14:45:00Z'

    CatalogEntryDeleted:
      description: Information about a deleted catalog entry
      type: object
      required:
        - catalogEntryId
        - isbn
      properties:
        catalogEntryId:
          description: Unique identifier of the deleted catalog entry
          type: string
          format: uuid
          examples:
            - 3f8a2c1d-5e9b-4f7a-a1d3-6c8e2b4f9a7d
        isbn:
          description: ISBN of the deleted book
          type: string
          pattern: ^(?:ISBN(?:-13)?:?\ )?(?=[0-9]{13}$|(?=(?:[0-9]+[-\ ]){4})[-\ 0-9]{17}$)97[89][-\ ]?[0-9]{1,5}[-\ ]?[0-9]+[-\ ]?[0-9]+[-\ ]?[0-9]$
          examples:
            - '9780321146530'
        deletedAt:
          description: Timestamp when the catalog entry was deleted
          type: string
          format: date-time
          examples:
            - '2025-10-05T16:20:00Z'

    Author:
      description: Author of a book
      type: object
      required:
        - authorId
        - givenName
        - familyName
      properties:
        authorId:
          description: Unique identifier of the author
          type: string
          format: uuid
          examples:
            - 08a13654-05f3-4664-8c8d-fdd9114ec3be
        givenName:
          description: Given name (first name) of the author
          type: string
          minLength: 2
          maxLength: 55
          examples:
            - Kent
        familyName:
          description: Family name (last name) of the author
          type: string
          minLength: 2
          maxLength: 55
          examples:
            - Beck

    Publisher:
      description: Publisher of a book
      type: object
      required:
        - name
      properties:
        name:
          description: Name of the publisher
          type: string
          minLength: 2
          maxLength: 100
          examples:
            - Addison-Wesley
            - Springer Nature
        city:
          description: Location/city of the publisher
          type: string
          minLength: 2
          maxLength: 100
          examples:
            - Boston
            - Cham, Switzerland

    Tag:
      description: Tag for categorization and recommendations
      type: object
      required:
        - tagId
        - keyword
      properties:
        tagId:
          description: Unique identifier of the tag
          type: string
          format: uuid
          examples:
            - f2d8a1c3-4b5e-6f7a-8d9c-1e2f3a4b5c6d
        keyword:
          description: Tag keyword
          type: string
          minLength: 2
          maxLength: 50
          examples:
            - programming
            - testing
            - software-engineering

    DigitalContent:
      description: Digital content information for the book
      type: object
      required:
        - mediaUrl
        - format
      properties:
        mediaUrl:
          description: URL to the digital content
          type: string
          format: uri
          examples:
            - 'https://online-library.org/storage/2024/test-driven-development.epub'
        format:
          description: Format of the digital content
          type: string
          enum:
            - EPUB
            - KINDLE
            - PDF
            - BBEB
            - MOBI
          examples:
            - EPUB

    Book:
      description: Book information from purchase event
      type: object
      required:
        - isbn13
      properties:
        bookIdentifier:
          description: Identifier of a book
          type: string
          format: uuid
          examples:
            - 5dda405a-d28e-490a-8508-1ea3453e91ae
        isbn13:
          description: ISBN (International Standard Book Number) with 13 characters
          type: string
          pattern: ^(?:ISBN(?:-13)?:?\ )?(?=[0-9]{13}$|(?=(?:[0-9]+[-\ ]){4})[-\ 0-9]{17}$)97[89][-\ ]?[0-9]{1,5}[-\ ]?[0-9]+[-\ ]?[0-9]+[-\ ]?[0-9]$
          examples:
            - '9780321146530'
            - 'ISBN 978-0321-14653-0'
        authors:
          description: Authors of the book
          type: array
          minItems: 1
          maxItems: 10
          items:
            $ref: '#/components/schemas/Author'
        areEditors:
          description: Flag to set to true if the book is published by editors
          type: boolean
          default: false
          examples:
            - true
        editor:
          $ref: '#/components/schemas/Publisher'
        title:
          description: Title of the book
          type: string
          minLength: 2
          maxLength: 255
          examples:
            - Test-Driven Development
        subtitle:
          description: Subtitle of the book
          type: string
          minLength: 2
          maxLength: 255
          examples:
            - By Example
        media:
          description: Link to the media which contains the book
          type: string
          format: url
          examples:
            - 'https://online-library/storage/2024/test-driven-development.epub'
        format:
          description: Format of the according media
          type: string
          x-extensible-enum:
            - EPUB
            - KINDLE
            - PDF
            - BBEB
            - MOBI
          default: EPUB
          examples:
            - EPUB

    MessageHeader:
      description: Header information for each message
      type: object
      required:
        - correlationId
        - messageId
        - x-api-identifier
        - x-api-version
      properties:
        correlationId:
          description: Identifier to trace end-to-end API journey
          type: string
          format: uuid
          examples:
            - b3416449-5f69-4cd2-a6c4-1ff82da96bce
        messageId:
          description: Unique identifier for the particular message
          type: string
          format: uuid
          examples:
            - 5a1d305b-19f3-46eb-ada1-9a9770e56fd1
        x-api-identifier:
          description: Identifier of the API used to create the message
          type: string
          format: uuid
          default: a8f2c19e-7d4b-4e2a-9f1c-5b8e3d2a6f7c
          examples:
            - a8f2c19e-7d4b-4e2a-9f1c-5b8e3d2a6f7c
        x-api-version:
          description: Version of the API
          type: string
          x-extensible-enum:
            - 2025-1
          default: 2025-1
          examples:
            - 2025-1
        source:
          description: Application name creating the message
          type: string
          minLength: 2
          maxLength: 20
          examples:
            - CatalogManagement

  securitySchemes:
    user-password:
      type: userPassword
      description: Security scheme for events