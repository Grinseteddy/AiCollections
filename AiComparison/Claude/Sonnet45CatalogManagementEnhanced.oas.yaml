openapi: 3.1.0
info:
  title: Catalog Management API
  description: API for managing library catalog entries, allowing librarians to manage catalog entries and tag books for recommendations
  version: 2025-1
  contact:
    name: Annegret Junker
    email: annegret.junker@gmx.de
  x-api-id: c8e4f7a3-9d2b-4c18-ba55-937e1fcd5183
  x-audience: external-public

servers:
  - url: 'https://apis.online-library.org/catalog-management'

security:
  - openIdConnect:
      - catalog:read
      - catalog:write

tags:
  - name: Catalog Entries
    description: Operations for managing catalog entries
  - name: Abstracts
    description: Operations for managing catalog entry abstracts
  - name: Tags
    description: Operations for managing catalog entry tags

paths:
  /catalog-entries:
    get:
      description: Retrieves a list of catalog entries matching the search parameters
      operationId: getCatalogEntries
      tags:
        - Catalog Entries
      security:
        - openIdConnect:
            - catalog:read
      parameters:
        - $ref: '#/components/parameters/SearchParameter'
        - $ref: '#/components/parameters/VersionParameter'
      responses:
        '200':
          $ref: '#/components/responses/CatalogEntriesResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'
        default:
          $ref: '#/components/responses/DefaultResponse'

    post:
      description: Creates a new catalog entry
      operationId: createCatalogEntry
      tags:
        - Catalog Entries
      security:
        - openIdConnect:
            - catalog:write
      parameters:
        - $ref: '#/components/parameters/VersionParameter'
      requestBody:
        $ref: '#/components/requestBodies/CatalogEntryCreateRequest'
      responses:
        '201':
          $ref: '#/components/responses/CatalogEntryLinkResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'
        default:
          $ref: '#/components/responses/DefaultResponse'

  /catalog-entries/{catalogEntryId}:
    get:
      description: Retrieves a specific catalog entry by its identifier
      operationId: getCatalogEntryById
      tags:
        - Catalog Entries
      security:
        - openIdConnect:
            - catalog:read
      parameters:
        - $ref: '#/components/parameters/CatalogEntryIdParameter'
        - $ref: '#/components/parameters/VersionParameter'
      responses:
        '200':
          $ref: '#/components/responses/CatalogEntryResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'
        default:
          $ref: '#/components/responses/DefaultResponse'

    put:
      description: Updates an existing catalog entry
      operationId: updateCatalogEntry
      tags:
        - Catalog Entries
      security:
        - openIdConnect:
            - catalog:write
      parameters:
        - $ref: '#/components/parameters/CatalogEntryIdParameter'
        - $ref: '#/components/parameters/VersionParameter'
      requestBody:
        $ref: '#/components/requestBodies/CatalogEntryUpdateRequest'
      responses:
        '200':
          $ref: '#/components/responses/CatalogEntryLinkResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'
        default:
          $ref: '#/components/responses/DefaultResponse'

    delete:
      description: Deletes a catalog entry
      operationId: deleteCatalogEntry
      tags:
        - Catalog Entries
      security:
        - openIdConnect:
            - catalog:write
      parameters:
        - $ref: '#/components/parameters/CatalogEntryIdParameter'
        - $ref: '#/components/parameters/VersionParameter'
      responses:
        '204':
          description: Catalog entry deleted successfully
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'
        default:
          $ref: '#/components/responses/DefaultResponse'

  /catalog-entries/{catalogEntryId}/abstracts:
    put:
      description: Updates or adds an abstract for a catalog entry
      operationId: updateCatalogEntryAbstract
      tags:
        - Abstracts
      security:
        - openIdConnect:
            - catalog:write
      parameters:
        - $ref: '#/components/parameters/CatalogEntryIdParameter'
        - $ref: '#/components/parameters/VersionParameter'
      requestBody:
        $ref: '#/components/requestBodies/AbstractUpdateRequest'
      responses:
        '200':
          $ref: '#/components/responses/AbstractLinkResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'
        default:
          $ref: '#/components/responses/DefaultResponse'

  /catalog-entries/{catalogEntryId}/tags:
    put:
      description: Updates tags for a catalog entry (for recommendations)
      operationId: updateCatalogEntryTags
      tags:
        - Tags
      security:
        - openIdConnect:
            - catalog:write
      parameters:
        - $ref: '#/components/parameters/CatalogEntryIdParameter'
        - $ref: '#/components/parameters/VersionParameter'
      requestBody:
        $ref: '#/components/requestBodies/TagsUpdateRequest'
      responses:
        '200':
          $ref: '#/components/responses/TagsLinkResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'
        default:
          $ref: '#/components/responses/DefaultResponse'

components:
  parameters:
    CatalogEntryIdParameter:
      description: Path parameter to identify a catalog entry uniquely
      name: catalogEntryId
      in: path
      required: true
      schema:
        type: string
        format: uuid
        examples:
          - 7a3e8f92-4d5c-4b21-9e87-3f2a1b6c8d4e

    SearchParameter:
      description: Search parameter to filter catalog entries
      name: search
      in: query
      schema:
        type: string
        maxLength: 200
        examples:
          - "Machine Learning"

    VersionParameter:
      description: Version of the expected API specification version by the client
      name: x-api-version
      in: header
      required: true
      schema:
        type: string
        default: "2025-1"
        x-extensible-enum: ["2025-1"]

  requestBodies:
    CatalogEntryCreateRequest:
      description: Catalog entry creation request
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CatalogEntryToBeCreated'

    CatalogEntryUpdateRequest:
      description: Catalog entry update request
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CatalogEntryToBeUpdated'

    AbstractUpdateRequest:
      description: Abstract update request
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AbstractUpdate'

    TagsUpdateRequest:
      description: Tags update request
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TagsUpdate'

  responses:
    CatalogEntryResponse:
      description: Single catalog entry response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CatalogEntry'

    CatalogEntriesResponse:
      description: List of catalog entries
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CatalogEntries'

    CatalogEntryLinkResponse:
      description: Link to a catalog entry
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CatalogEntryLink'

    AbstractLinkResponse:
      description: Link to a catalog entry abstract
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AbstractLink'

    TagsLinkResponse:
      description: Link to catalog entry tags
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TagsLink'

    BadRequestResponse:
      description: Invalid request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    NotFoundResponse:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    ForbiddenResponse:
      description: Access forbidden - only librarians can change entries
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    ServiceNotAvailableResponse:
      description: Service unavailable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    DefaultResponse:
      description: General error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  schemas:
    CatalogEntry:
      description: A catalog entry representing a book in the library catalog
      type: object
      required:
        - id
        - title
        - author
        - createdAt
      properties:
        id:
          description: Unique identifier of the catalog entry
          type: string
          format: uuid
          examples:
            - 7a3e8f92-4d5c-4b21-9e87-3f2a1b6c8d4e
        title:
          description: Title of the book
          type: string
          minLength: 1
          maxLength: 500
          examples:
            - "Introduction to Machine Learning"
        author:
          description: Author(s) of the book
          type: string
          minLength: 1
          maxLength: 300
          examples:
            - "John Doe"
        publisher:
          description: Publisher of the book
          type: string
          maxLength: 200
          examples:
            - "Technical Publishing House"
        isbn:
          description: ISBN of the book
          type: string
          pattern: '^(?:ISBN(?:-1[03])?:? )?(?=[0-9X]{10}$|(?=(?:[0-9]+[- ]){3})[- 0-9X]{13}$|97[89][0-9]{10}$|(?=(?:[0-9]+[- ]){4})[- 0-9]{17}$)(?:97[89][- ]?)?[0-9]{1,5}[- ]?[0-9]+[- ]?[0-9]+[- ]?[0-9X]$'
          examples:
            - "978-3-16-148410-0"
        publishedOn:
          description: Publication date of the book
          type: string
          format: date
          examples:
            - "2024-05-15"
        abstract:
          description: Abstract or summary of the book
          type: string
          maxLength: 2000
          examples:
            - "This book provides a comprehensive introduction to machine learning concepts and techniques."
        tags:
          description: Tags for categorizing and recommending books
          type: array
          items:
            type: string
            maxLength: 50
          maxItems: 20
          examples:
            - ["machine-learning", "artificial-intelligence", "data-science"]
        createdAt:
          description: Date and time when the catalog entry was created
          type: string
          format: date-time
          examples:
            - "2025-10-06T13:24:00Z"
        updatedAt:
          description: Date and time when the catalog entry was last updated
          type: string
          format: date-time
          examples:
            - "2025-10-06T13:24:00Z"

    CatalogEntryToBeCreated:
      description: Catalog entry to be created in the system
      type: object
      required:
        - title
        - author
      properties:
        title:
          description: Title of the book
          type: string
          minLength: 1
          maxLength: 500
          examples:
            - "Introduction to Machine Learning"
        author:
          description: Author(s) of the book
          type: string
          minLength: 1
          maxLength: 300
          examples:
            - "John Doe"
        publisher:
          description: Publisher of the book
          type: string
          maxLength: 200
          examples:
            - "Technical Publishing House"
        isbn:
          description: ISBN of the book
          type: string
          pattern: '^(?:ISBN(?:-1[03])?:? )?(?=[0-9X]{10}$|(?=(?:[0-9]+[- ]){3})[- 0-9X]{13}$|97[89][0-9]{10}$|(?=(?:[0-9]+[- ]){4})[- 0-9]{17}$)(?:97[89][- ]?)?[0-9]{1,5}[- ]?[0-9]+[- ]?[0-9]+[- ]?[0-9X]$'
          examples:
            - "978-3-16-148410-0"
        publishedOn:
          description: Publication date of the book
          type: string
          format: date
          examples:
            - "2024-05-15"
        abstract:
          description: Abstract or summary of the book
          type: string
          maxLength: 2000
          examples:
            - "This book provides a comprehensive introduction to machine learning concepts."
        tags:
          description: Tags for categorizing and recommending books
          type: array
          items:
            type: string
            maxLength: 50
          maxItems: 20
          examples:
            - ["machine-learning", "artificial-intelligence"]

    CatalogEntryToBeUpdated:
      description: Catalog entry fields to be updated
      type: object
      properties:
        title:
          description: Title of the book
          type: string
          minLength: 1
          maxLength: 500
          examples:
            - "Introduction to Machine Learning"
        author:
          description: Author(s) of the book
          type: string
          minLength: 1
          maxLength: 300
          examples:
            - "John Doe"
        publisher:
          description: Publisher of the book
          type: string
          maxLength: 200
          examples:
            - "Technical Publishing House"
        isbn:
          description: ISBN of the book
          type: string
          pattern: '^(?:ISBN(?:-1[03])?:? )?(?=[0-9X]{10}$|(?=(?:[0-9]+[- ]){3})[- 0-9X]{13}$|97[89][0-9]{10}$|(?=(?:[0-9]+[- ]){4})[- 0-9]{17}$)(?:97[89][- ]?)?[0-9]{1,5}[- ]?[0-9]+[- ]?[0-9]+[- ]?[0-9X]$'
          examples:
            - "978-3-16-148410-0"
        publishedOn:
          description: Publication date of the book
          type: string
          format: date
          examples:
            - "2024-05-15"

    AbstractUpdate:
      description: Abstract to be updated for a catalog entry
      type: object
      required:
        - abstract
      properties:
        abstract:
          description: Abstract or summary of the book
          type: string
          minLength: 1
          maxLength: 2000
          examples:
            - "This book provides a comprehensive introduction to machine learning concepts and techniques."

    TagsUpdate:
      description: Tags to be updated for a catalog entry
      type: object
      required:
        - tags
      properties:
        tags:
          description: Tags for categorizing and recommending books
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 50
          minItems: 1
          maxItems: 20
          examples:
            - ["machine-learning", "artificial-intelligence", "data-science"]

    CatalogEntries:
      description: List of catalog entries
      type: object
      required:
        - catalogEntries
      properties:
        catalogEntries:
          description: Array of catalog entries
          type: array
          minItems: 0
          maxItems: 1000
          items:
            $ref: '#/components/schemas/CatalogEntry'

    CatalogEntryLink:
      description: Link to a catalog entry
      type: object
      required:
        - catalogEntryLink
      properties:
        catalogEntryLink:
          description: URI link to the catalog entry
          type: string
          format: uri
          examples:
            - "https://apis.online-library.org/catalog-management/catalog-entries/7a3e8f92-4d5c-4b21-9e87-3f2a1b6c8d4e"

    AbstractLink:
      description: Link to a catalog entry abstract
      type: object
      required:
        - abstractLink
      properties:
        abstractLink:
          description: URI link to the catalog entry abstract
          type: string
          format: uri
          examples:
            - "https://apis.online-library.org/catalog-management/catalog-entries/7a3e8f92-4d5c-4b21-9e87-3f2a1b6c8d4e/abstracts"

    TagsLink:
      description: Link to catalog entry tags
      type: object
      required:
        - tagsLink
      properties:
        tagsLink:
          description: URI link to the catalog entry tags
          type: string
          format: uri
          examples:
            - "https://apis.online-library.org/catalog-management/catalog-entries/7a3e8f92-4d5c-4b21-9e87-3f2a1b6c8d4e/tags"

    Error:
      description: Standard error object
      type: object
      required:
        - code
        - title
      properties:
        code:
          description: Short code of the error for easy recognition
          type: string
          minLength: 2
          maxLength: 20
          examples:
            - "CATALOG-001"
        title:
          description: Human-readable error message
          type: string
          minLength: 2
          maxLength: 256
          examples:
            - "Catalog entry not found"
        detail:
          description: Link to the resource related to the error
          type: string
          format: uri
          examples:
            - "https://apis.online-library.org/catalog-management/catalog-entries/7a3e8f92-4d5c-4b21-9e87-3f2a1b6c8d4e"
        severity:
          description: Severity level of the error
          type: string
          x-extensible-enum:
            - FATAL
            - ERROR
            - WARNING
            - INFO
          default: ERROR
          examples:
            - ERROR
        timestamp:
          description: Timestamp when the error occurred
          type: string
          format: date-time
          examples:
            - "2025-10-06T13:24:00Z"

  securitySchemes:
    openIdConnect:
      description: Access to catalog management via OpenID Connect
      type: openIdConnect
      openIdConnectUrl: https://auth.online-library.org/.well-known/openid-configuration
  
