asyncapi: 3.0.0
info:
  title: Catalog Management
  version: 1.0.0
  description: |
    Events produced by the catalog management service.
    The service produces the following domain events:
      - Catalog Entry Created
      - Catalog Entry Updated
    
    This bounded context manages the library catalog including books, authors, 
    titles, publishers, ISBNs, and other bibliographic metadata.
    
    External Context Dependencies:
      - Purchase Context: Consumes BookPurchased events to create catalog entries
      - Audio Summary Context: Produces events consumed for audio summary generation
      - Catalog Search Context: Produces events for search indexing
  contact:
    name: Annegret Junker
    url: https://online-library.org/sample
    email: annegret.junker@online-library.org
  externalDocs:
    description: Event Storming Documentation
    url: https://online-library.org/docs/event-storming
  x-api-id: a8f3b2c1-7d4e-4a9b-b3c2-8f1e5a6d9c3b

servers:
  event-broker-library:
    host: broker.online-library.org:8092
    protocol: kafka
    description: Event broker of the online library
    security:
      - $ref: '#/components/securitySchemes/user-password'
    bindings:
      kafka:
        schemaRegistryUrl: 'https://online-library-schema-registry.com'
        schemaRegistryVendor: 'confluent'
        bindingVersion: '0.5.0'

channels:
  CatalogEntryCreatedChannel:
    description: Channel where messages are stored when a catalog entry was created
    address: catalog-entry-created
    messages:
      CatalogEntryCreatedEvent:
        $ref: '#/components/messages/CatalogEntryCreatedSend'
    bindings:
      kafka:
        topic: 'catalog-entry-created-event-channel'
        bindingVersion: '0.5.0'

  CatalogEntryUpdatedChannel:
    description: Channel where messages are stored when a catalog entry was updated
    address: catalog-entry-updated
    messages:
      CatalogEntryUpdatedEvent:
        $ref: '#/components/messages/CatalogEntryUpdatedSend'
    bindings:
      kafka:
        topic: 'catalog-entry-updated-event-channel'
        bindingVersion: '0.5.0'

  BookPurchasedChannel:
    description: Channel to receive book purchased events from Purchase context
    address: book-purchased
    messages:
      BookPurchasedEvent:
        $ref: '#/components/messages/BookPurchasedReceive'
    bindings:
      kafka:
        topic: 'book-purchased-event-channel'
        bindingVersion: '0.5.0'
    externalDocs:
      description: Book Purchased Event - Produced by Purchase Context
      url: https://online-library.org/api/purchase#BookPurchasedEvent

operations:
  CatalogEntryCreatedSendOperation:
    action: send
    channel:
      $ref: '#/channels/CatalogEntryCreatedChannel'
    summary: Publish catalog entry created event
    description: |
      Triggered when a librarian creates a new catalog entry.
      This event is consumed by:
        - Audio Summary Context (to create audio summaries)
        - Catalog Search Context (to create search index)
    bindings:
      kafka:
        bindingVersion: '0.5.0'
        groupId:
          type: string
          pattern: ^cg-catalog-entry-created-.*$

  CatalogEntryUpdatedSendOperation:
    action: send
    channel:
      $ref: '#/channels/CatalogEntryUpdatedChannel'
    summary: Publish catalog entry updated event
    description: |
      Triggered when a librarian updates an existing catalog entry.
      This event is consumed by:
        - Catalog Search Context (to update search index)
    bindings:
      kafka:
        bindingVersion: '0.5.0'
        groupId:
          type: string
          pattern: ^cg-catalog-entry-updated-.*$

  BookPurchasedReceiveOperation:
    action: receive
    channel:
      $ref: '#/channels/BookPurchasedChannel'
    summary: Receive book purchased events
    description: |
      Consumes events from the Purchase context when a book is purchased.
      Triggers the creation of a new catalog entry by the librarian.
    bindings:
      kafka:
        bindingVersion: '0.5.0'
        groupId:
          type: string
          enum:
            - cg-catalog-management-book-purchased

components:
  messages:
    CatalogEntryCreatedSend:
      name: CatalogEntryCreated
      title: Catalog Entry Created Event
      summary: Event published when a new catalog entry is created
      contentType: application/json
      headers:
        $ref: '#/components/schemas/MessageHeader'
      payload:
        $ref: '#/components/schemas/Katalogeintrag'
      tags:
        - name: catalog
        - name: creation

    CatalogEntryUpdatedSend:
      name: CatalogEntryUpdated
      title: Catalog Entry Updated Event
      summary: Event published when a catalog entry is updated
      contentType: application/json
      headers:
        $ref: '#/components/schemas/MessageHeader'
      payload:
        $ref: '#/components/schemas/Katalogeintrag'
      tags:
        - name: catalog
        - name: update

    BookPurchasedReceive:
      name: BookPurchased
      title: Book Purchased Event
      summary: Event received from Purchase context when a book is purchased
      contentType: application/json
      headers:
        $ref: '#/components/schemas/MessageHeader'
      payload:
        $ref: '#/components/schemas/BookPurchasedPayload'
      tags:
        - name: purchase
        - name: external
      externalDocs:
        description: Defined in Purchase Context API
        url: https://online-library.org/api/purchase

  schemas:
    Katalogeintrag:
      description: |
        Catalog entry (Katalogeintrag) representing a book in the library catalog.
        Core aggregate in the Catalog Management bounded context.
      type: object
      required:
        - identifier
        - isbn
        - titel
        - autor
        - verlag
        - createdAt
      properties:
        identifier:
          description: Unique identifier for the catalog entry (Schlüssel Identifier)
          type: string
          format: uuid
          examples:
            - 3f8e9d2a-1b4c-4d5e-8f9a-2c3d4e5f6a7b
        isbn:
          $ref: '#/components/schemas/ISBN'
        titel:
          $ref: '#/components/schemas/Titel'
        autor:
          description: Authors of the book (1..* Autor entities)
          type: array
          minItems: 1
          maxItems: 10
          items:
            $ref: '#/components/schemas/Autor'
        verlag:
          $ref: '#/components/schemas/Verlag'
        publishedOn:
          description: Publication date (Veröffentlicht am)
          type: string
          format: date
          examples:
            - '2002-11-08'
        abstract:
          description: Abstract or summary of the book (Kurzfassung, 0..1)
          type: string
          minLength: 10
          maxLength: 2000
          examples:
            - 'Test-Driven Development is a software development methodology where tests are written before the code itself.'
        tags:
          description: Keywords or tags for categorization (Stichwort, 0..*)
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        createdAt:
          description: Timestamp when catalog entry was created (Erzeugt um)
          type: string
          format: date-time
          examples:
            - '2025-10-02T10:30:00Z'
        updatedAt:
          description: Timestamp when catalog entry was last updated (Geändert um)
          type: string
          format: date-time
          examples:
            - '2025-10-02T14:45:00Z'

    Autor:
      description: Author entity (Autor) - writes the book (1..* cardinality, schreibt relationship)
      type: object
      required:
        - autorId
        - givenName
        - familyName
      properties:
        autorId:
          description: Identifier of the author
          type: string
          format: uuid
          examples:
            - 08a13654-05f3-4664-8c8d-fdd9114ec3be
        givenName:
          description: Given name of the author
          type: string
          minLength: 2
          maxLength: 55
          examples:
            - Kent
        familyName:
          description: Family name of the author
          type: string
          minLength: 2
          maxLength: 55
          examples:
            - Beck
        biography:
          description: Optional biography of the author
          type: string
          maxLength: 1000

    Titel:
      description: Title entity (Titel) of the book
      type: object
      required:
        - mainTitle
      properties:
        mainTitle:
          description: Main title of the book
          type: string
          minLength: 2
          maxLength: 255
          examples:
            - Test-Driven Development
        subtitle:
          description: Subtitle of the book
          type: string
          minLength: 2
          maxLength: 255
          examples:
            - By Example

    Verlag:
      description: Publisher entity (Verlag) that publishes the book
      type: object
      required:
        - name
      properties:
        name:
          description: Name of the publisher
          type: string
          minLength: 2
          maxLength: 100
          examples:
            - Addison-Wesley
            - Springer Nature
        city:
          description: Location of the publisher
          type: string
          minLength: 2
          maxLength: 55
          examples:
            - Boston
            - Cham, Switzerland
        country:
          description: Country of the publisher
          type: string
          minLength: 2
          maxLength: 55
          examples:
            - United States
            - Switzerland

    ISBN:
      description: |
        ISBN (International Standard Book Number) value object.
        ISBN-13 format as defined in the visual glossary.
      type: string
      pattern: ^(?:ISBN(?:-13)?:?\ )?(?=[0-9]{13}$|(?=(?:[0-9]+[-\ ]){4})[-\ 0-9]{17}$)97[89][-\ ]?[0-9]{1,5}[-\ ]?[0-9]+[-\ ]?[0-9]+[-\ ]?[0-9]$
      examples:
        - '9780321146530'
        - 'ISBN 978-0321-14653-0'

    Tag:
      description: Tag or keyword value object (Stichwort) for categorization (0..* cardinality, beschreibt relationship)
      type: object
      required:
        - keyword
      properties:
        keyword:
          description: The tag keyword
          type: string
          minLength: 2
          maxLength: 50
          examples:
            - Software Engineering
            - Testing
            - Agile
        category:
          description: Optional category for the tag
          type: string
          maxLength: 50
          examples:
            - Programming Methodology

    MessageHeader:
      description: Header information for each message
      type: object
      required:
        - correlationId
        - messageId
        - x-api-identifier
        - x-api-version
      properties:
        correlationId:
          description: Identifier to be set by application to trace end-to-end-api-journey
          type: string
          format: uuid
          examples:
            - b3416449-5f69-4cd2-a6c4-1ff82da96bce
        messageId:
          description: Identifier for the particular message, is needed in case of cascading infrastructure
          type: string
          format: uuid
          examples:
            - 5a1d305b-19f3-46eb-ada1-9a9770e56fd1
        x-api-identifier:
          description: Identifier of the API used to create the message
          type: string
          format: uuid
          default: a8f3b2c1-7d4e-4a9b-b3c2-8f1e5a6d9c3b
          examples:
            - a8f3b2c1-7d4e-4a9b-b3c2-8f1e5a6d9c3b
        x-api-version:
          description: Version of the API
          type: string
          x-extensible-enum:
            - 1.0.0
          default: 1.0.0
          examples:
            - 1.0.0
        source:
          description: Application name creating the message
          type: string
          minLength: 2
          maxLength: 20
          examples:
            - CatalogManagement
        timestamp:
          description: Timestamp when the message was created
          type: string
          format: date-time
          examples:
            - '2025-10-02T10:30:00Z'

    BookPurchasedPayload:
      description: |
        Payload from BookPurchased event (external to this context).
        Defined in Purchase Context API.
        This is consumed to trigger catalog entry creation.
      type: object
      required:
        - isbn13
      properties:
        bookIdentifier:
          description: Identifier of a book from purchase context
          type: string
          format: uuid
          examples:
            - 5dda405a-d28e-490a-8508-1ea3453e91ae
        isbn13:
          description: ISBN-13 of the purchased book
          type: string
          pattern: ^(?:ISBN(?:-13)?:?\ )?(?=[0-9]{13}$|(?=(?:[0-9]+[-\ ]){4})[-\ 0-9]{17}$)97[89][-\ ]?[0-9]{1,5}[-\ ]?[0-9]+[-\ ]?[0-9]+[-\ ]?[0-9]$
          examples:
            - '9780321146530'
        authors:
          description: Authors from purchase data
          type: array
          minItems: 1
          items:
            type: object
            properties:
              givenName:
                type: string
              familyName:
                type: string
        title:
          description: Title from purchase data
          type: string
        subtitle:
          description: Subtitle from purchase data
          type: string
        editor:
          description: Publisher information from purchase data
          type: object
          properties:
            name:
              type: string
            city:
              type: string
      externalDocs:
        description: Full schema defined in Purchase Context
        url: https://online-library.org/api/purchase#BookShort

  securitySchemes:
    user-password:
      type: userPassword
      description: Security scheme for events