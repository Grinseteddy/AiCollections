openapi: 3.1.0
info:
  title: Catalog Management API
  description: |
    API for managing library catalog entries including books, authors, titles, publishers, and ISBN information.
    This API supports catalog entry creation, updates, search operations, and metadata management.
  version: 1.0.0
  x-api-id: c7b2f4a1-9d3e-4c28-b851-7f3a9c2d5e18
  x-audience: external-public
  contact:
    name: Catalog Management Team
    email: catalog-support@library.com

servers:
  - url: 'https://api.library.com/catalog/v1'
    description: Production server
  - url: 'https://api.library-staging.com/catalog/v1'
    description: Staging server

security:
  - openIdConnect:
      - catalog:read
      - catalog:write
      - catalog:admin

tags:
  - name: Catalog Entries
    description: Operations for managing catalog entries (Katalogeintrag)
  - name: Authors
    description: Operations for managing authors (Autor)
  - name: Search
    description: Catalog search operations
  - name: Metadata
    description: Book metadata operations

paths:
  /catalog-entries:
    get:
      operationId: getCatalogEntries
      summary: Retrieve catalog entries with filtering
      tags:
        - Catalog Entries
      security:
        - openIdConnect:
            - catalog:read
      parameters:
        - $ref: '#/components/parameters/AuthorParameter'
        - $ref: '#/components/parameters/TitleParameter'
        - $ref: '#/components/parameters/PublisherParameter'
        - $ref: '#/components/parameters/ISBNParameter'
        - $ref: '#/components/parameters/TagParameter'
        - $ref: '#/components/parameters/PageParameter'
        - $ref: '#/components/parameters/PageSizeParameter'
        - $ref: '#/components/parameters/VersionParameter'
      responses:
        '200':
          $ref: '#/components/responses/CatalogEntryListResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'

    post:
      operationId: createCatalogEntry
      summary: Create a new catalog entry
      description: |
        Creates a new catalog entry in the system. This operation is typically performed by librarians
        after purchasing a new book. The entry includes bibliographic metadata such as author, title,
        publisher, ISBN, and publication date.
      tags:
        - Catalog Entries
      security:
        - openIdConnect:
            - catalog:write
      parameters:
        - $ref: '#/components/parameters/VersionParameter'
      requestBody:
        $ref: '#/components/requestBodies/CatalogEntryCreateRequest'
      responses:
        '201':
          $ref: '#/components/responses/CatalogEntryCreatedResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'

  /catalog-entries/{catalogEntryId}:
    get:
      operationId: getCatalogEntryById
      summary: Retrieve a specific catalog entry
      tags:
        - Catalog Entries
      security:
        - openIdConnect:
            - catalog:read
      parameters:
        - $ref: '#/components/parameters/CatalogEntryIdParameter'
        - $ref: '#/components/parameters/VersionParameter'
      responses:
        '200':
          $ref: '#/components/responses/CatalogEntryResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'

    put:
      operationId: updateCatalogEntry
      summary: Update an existing catalog entry
      description: |
        Updates catalog entry metadata. This operation is performed by librarians to correct or
        enhance bibliographic information. Updates the "updatedAt" timestamp automatically.
      tags:
        - Catalog Entries
      security:
        - openIdConnect:
            - catalog:write
      parameters:
        - $ref: '#/components/parameters/CatalogEntryIdParameter'
        - $ref: '#/components/parameters/VersionParameter'
      requestBody:
        $ref: '#/components/requestBodies/CatalogEntryUpdateRequest'
      responses:
        '200':
          $ref: '#/components/responses/CatalogEntryResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'

    delete:
      operationId: deleteCatalogEntry
      summary: Delete a catalog entry
      description: |
        Removes a catalog entry from the system. This operation should be used with caution.
        Note: This does not delete physical book copies, only the catalog metadata.
      tags:
        - Catalog Entries
      security:
        - openIdConnect:
            - catalog:admin
      parameters:
        - $ref: '#/components/parameters/CatalogEntryIdParameter'
        - $ref: '#/components/parameters/VersionParameter'
      responses:
        '204':
          description: Catalog entry deleted successfully
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'

  /catalog-entries/search:
    post:
      operationId: searchCatalogEntries
      summary: Advanced catalog search
      description: |
        Performs advanced search across catalog entries using multiple criteria.
        Supports full-text search on title, author, publisher, and tags.
        This endpoint is used by both members (catalog search scenario) and librarians.
      tags:
        - Search
      security:
        - openIdConnect:
            - catalog:read
      parameters:
        - $ref: '#/components/parameters/VersionParameter'
      requestBody:
        $ref: '#/components/requestBodies/CatalogSearchRequest'
      responses:
        '200':
          $ref: '#/components/responses/CatalogSearchResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'

  /catalog-entries/isbn/{isbn}:
    get:
      operationId: getCatalogEntryByISBN
      summary: Retrieve catalog entry by ISBN
      description: |
        Looks up a catalog entry using its ISBN. Returns the catalog entry if found.
        Useful for quick lookups and integrations with external systems.
      tags:
        - Catalog Entries
      security:
        - openIdConnect:
            - catalog:read
      parameters:
        - name: isbn
          in: path
          required: true
          schema:
            type: string
            pattern: '^(?:ISBN(?:-1[03])?:? )?(?=[0-9X]{10}$|(?=(?:[0-9]+[- ]){3})[- 0-9X]{13}$|97[89][0-9]{10}$|(?=(?:[0-9]+[- ]){4})[- 0-9]{17}$)(?:97[89][- ]?)?[0-9]{1,5}[- ]?[0-9]+[- ]?[0-9]+[- ]?[0-9X]$'
          description: ISBN-10 or ISBN-13 identifier
        - $ref: '#/components/parameters/VersionParameter'
      responses:
        '200':
          $ref: '#/components/responses/CatalogEntryResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'

  /authors:
    get:
      operationId: getAuthors
      summary: Retrieve list of authors
      description: Retrieves authors available in the catalog system
      tags:
        - Authors
      security:
        - openIdConnect:
            - catalog:read
      parameters:
        - name: name
          in: query
          schema:
            type: string
          description: Filter by author name (partial match)
        - $ref: '#/components/parameters/PageParameter'
        - $ref: '#/components/parameters/PageSizeParameter'
        - $ref: '#/components/parameters/VersionParameter'
      responses:
        '200':
          $ref: '#/components/responses/AuthorListResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'

  /authors/{authorId}:
    get:
      operationId: getAuthorById
      summary: Retrieve a specific author
      tags:
        - Authors
      security:
        - openIdConnect:
            - catalog:read
      parameters:
        - $ref: '#/components/parameters/AuthorIdParameter'
        - $ref: '#/components/parameters/VersionParameter'
      responses:
        '200':
          $ref: '#/components/responses/AuthorResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'

  /publishers:
    get:
      operationId: getPublishers
      summary: Retrieve list of publishers
      description: Retrieves publishers available in the catalog system
      tags:
        - Metadata
      security:
        - openIdConnect:
            - catalog:read
      parameters:
        - name: name
          in: query
          schema:
            type: string
          description: Filter by publisher name (partial match)
        - $ref: '#/components/parameters/PageParameter'
        - $ref: '#/components/parameters/PageSizeParameter'
        - $ref: '#/components/parameters/VersionParameter'
      responses:
        '200':
          $ref: '#/components/responses/PublisherListResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'

  /tags:
    get:
      operationId: getTags
      summary: Retrieve available catalog tags
      description: |
        Retrieves all tags (keywords/Stichwort) used for categorizing catalog entries.
        Tags are used for improved searchability and classification.
      tags:
        - Metadata
      security:
        - openIdConnect:
            - catalog:read
      parameters:
        - $ref: '#/components/parameters/VersionParameter'
      responses:
        '200':
          $ref: '#/components/responses/TagListResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'

components:
  parameters:
    CatalogEntryIdParameter:
      name: catalogEntryId
      in: path
      required: true
      description: Unique identifier for the catalog entry (Schlüssel/Identifier)
      schema:
        type: string
        format: uuid

    AuthorIdParameter:
      name: authorId
      in: path
      required: true
      description: Unique identifier for the author
      schema:
        type: string
        format: uuid

    AuthorParameter:
      name: author
      in: query
      description: Filter by author name
      schema:
        type: string

    TitleParameter:
      name: title
      in: query
      description: Filter by title (Titel)
      schema:
        type: string

    PublisherParameter:
      name: publisher
      in: query
      description: Filter by publisher (Verlag)
      schema:
        type: string

    ISBNParameter:
      name: isbn
      in: query
      description: Filter by ISBN
      schema:
        type: string

    TagParameter:
      name: tag
      in: query
      description: Filter by tag/keyword (Stichwort)
      schema:
        type: string

    PageParameter:
      name: page
      in: query
      description: Page number for pagination (starts at 0)
      schema:
        type: integer
        minimum: 0
        default: 0

    PageSizeParameter:
      name: pageSize
      in: query
      description: Number of items per page
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20

    VersionParameter:
      name: x-version
      in: header
      required: true
      description: API version header
      schema:
        type: string
        default: "1.0.0"
        enum: ["1.0.0"]

  schemas:
    CatalogEntry:
      type: object
      description: |
        A catalog entry (Katalogeintrag) represents the bibliographic metadata for a book in the library catalog.
        This is the core aggregate of the Catalog Management bounded context.
      required:
        - identifier
        - title
        - author
        - isbn
        - publisher
        - createdAt
        - updatedAt
      properties:
        identifier:
          type: string
          format: uuid
          description: Unique identifier for the catalog entry (Schlüssel/Identifier)
          readOnly: true
        title:
          type: string
          minLength: 1
          maxLength: 500
          description: Book title (Titel)
        author:
          type: string
          minLength: 1
          maxLength: 200
          description: Author name (Autor) - stored as string for simplicity
        isbn:
          type: string
          pattern: '^(?:ISBN(?:-1[03])?:? )?(?=[0-9X]{10}$|(?=(?:[0-9]+[- ]){3})[- 0-9X]{13}$|97[89][0-9]{10}$|(?=(?:[0-9]+[- ]){4})[- 0-9]{17}$)(?:97[89][- ]?)?[0-9]{1,5}[- ]?[0-9]+[- ]?[0-9]+[- ]?[0-9X]$'
          description: International Standard Book Number (ISBN)
        publisher:
          type: string
          minLength: 1
          maxLength: 200
          description: Publisher name (Verlag/Publisher)
        publishedOn:
          type: string
          format: date
          description: Publication date (Veröffentlicht am/Published on)
        abstract:
          type: string
          maxLength: 2000
          description: Book abstract or summary (Kurzfassung/Abstract)
        tags:
          type: array
          description: Keywords or tags for categorization (Stichwort/Tag)
          items:
            type: string
            maxLength: 50
          maxItems: 20
        createdAt:
          type: string
          format: date-time
          description: Timestamp when the catalog entry was created (Erzeugt um/Created at)
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          description: Timestamp when the catalog entry was last updated (Geändert um/Updated at)
          readOnly: true
      example:
        identifier: "c7b2f4a1-9d3e-4c28-b851-7f3a9c2d5e18"
        title: "Domain-Driven Design: Tackling Complexity in the Heart of Software"
        author: "Eric Evans"
        isbn: "978-0321125217"
        publisher: "Addison-Wesley Professional"
        publishedOn: "2003-08-20"
        abstract: "A comprehensive guide to domain-driven design principles and practices."
        tags: ["Software Architecture", "DDD", "Design Patterns"]
        createdAt: "2025-01-15T10:30:00Z"
        updatedAt: "2025-01-15T10:30:00Z"

    CatalogEntryCreate:
      type: object
      description: Request payload for creating a new catalog entry
      required:
        - title
        - author
        - isbn
        - publisher
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 500
          description: Book title (Titel)
        author:
          type: string
          minLength: 1
          maxLength: 200
          description: Author name (Autor)
        isbn:
          type: string
          pattern: '^(?:ISBN(?:-1[03])?:? )?(?=[0-9X]{10}$|(?=(?:[0-9]+[- ]){3})[- 0-9X]{13}$|97[89][0-9]{10}$|(?=(?:[0-9]+[- ]){4})[- 0-9]{17}$)(?:97[89][- ]?)?[0-9]{1,5}[- ]?[0-9]+[- ]?[0-9]+[- ]?[0-9X]$'
          description: International Standard Book Number
        publisher:
          type: string
          minLength: 1
          maxLength: 200
          description: Publisher name (Verlag)
        publishedOn:
          type: string
          format: date
          description: Publication date (Veröffentlicht am)
        abstract:
          type: string
          maxLength: 2000
          description: Book abstract (Kurzfassung)
        tags:
          type: array
          description: Keywords or tags (Stichwort)
          items:
            type: string
            maxLength: 50
          maxItems: 20

    CatalogEntryUpdate:
      type: object
      description: Request payload for updating a catalog entry
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 500
          description: Book title (Titel)
        author:
          type: string
          minLength: 1
          maxLength: 200
          description: Author name (Autor)
        isbn:
          type: string
          pattern: '^(?:ISBN(?:-1[03])?:? )?(?=[0-9X]{10}$|(?=(?:[0-9]+[- ]){3})[- 0-9X]{13}$|97[89][0-9]{10}$|(?=(?:[0-9]+[- ]){4})[- 0-9]{17}$)(?:97[89][- ]?)?[0-9]{1,5}[- ]?[0-9]+[- ]?[0-9]+[- ]?[0-9X]$'
          description: International Standard Book Number
        publisher:
          type: string
          minLength: 1
          maxLength: 200
          description: Publisher name (Verlag)
        publishedOn:
          type: string
          format: date
          description: Publication date (Veröffentlicht am)
        abstract:
          type: string
          maxLength: 2000
          description: Book abstract (Kurzfassung)
        tags:
          type: array
          description: Keywords or tags (Stichwort)
          items:
            type: string
            maxLength: 50
          maxItems: 20

    CatalogSearchCriteria:
      type: object
      description: Advanced search criteria for catalog entries
      properties:
        query:
          type: string
          description: Full-text search query across title, author, publisher, and abstract
          maxLength: 200
        title:
          type: string
          description: Filter by title (partial match)
        author:
          type: string
          description: Filter by author (partial match)
        publisher:
          type: string
          description: Filter by publisher (partial match)
        isbn:
          type: string
          description: Exact ISBN match
        tags:
          type: array
          description: Filter by tags (any match)
          items:
            type: string
        publishedAfter:
          type: string
          format: date
          description: Filter by publication date (after or equal to)
        publishedBefore:
          type: string
          format: date
          description: Filter by publication date (before or equal to)
        page:
          type: integer
          minimum: 0
          default: 0
        pageSize:
          type: integer
          minimum: 1
          maximum: 100
          default: 20

    CatalogSearchResult:
      type: object
      description: Search results with pagination metadata
      required:
        - entries
        - totalCount
        - page
        - pageSize
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/CatalogEntry'
        totalCount:
          type: integer
          description: Total number of matching entries
        page:
          type: integer
          description: Current page number
        pageSize:
          type: integer
          description: Number of items per page
        totalPages:
          type: integer
          description: Total number of pages

    Author:
      type: object
      description: Author entity (Autor) - simplified representation
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
          description: Unique author identifier
        name:
          type: string
          minLength: 1
          maxLength: 200
          description: Full name of the author
        biography:
          type: string
          maxLength: 1000
          description: Author biography
        bookCount:
          type: integer
          description: Number of books by this author in the catalog
          readOnly: true

    Publisher:
      type: object
      description: Publisher entity (Verlag)
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
          description: Unique publisher identifier
        name:
          type: string
          minLength: 1
          maxLength: 200
          description: Publisher name
        country:
          type: string
          maxLength: 100
          description: Publisher's country
        website:
          type: string
          format: uri
          description: Publisher's website URL

    Tag:
      type: object
      description: Tag/Keyword entity (Stichwort)
      required:
        - name
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
          description: Tag name
        usageCount:
          type: integer
          description: Number of catalog entries using this tag
          readOnly: true

    PaginatedResponse:
      type: object
      description: Generic pagination wrapper
      required:
        - totalCount
        - page
        - pageSize
      properties:
        totalCount:
          type: integer
          description: Total number of items
        page:
          type: integer
          description: Current page number
        pageSize:
          type: integer
          description: Items per page
        totalPages:
          type: integer
          description: Total number of pages

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: Error code for programmatic handling
        message:
          type: string
          description: Human-readable error message
        details:
          type: object
          description: Additional error details
        timestamp:
          type: string
          format: date-time
          description: Timestamp when the error occurred

  responses:
    CatalogEntryResponse:
      description: Single catalog entry response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CatalogEntry'

    CatalogEntryListResponse:
      description: List of catalog entries with pagination
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/PaginatedResponse'
              - type: object
                properties:
                  entries:
                    type: array
                    items:
                      $ref: '#/components/schemas/CatalogEntry'

    CatalogEntryCreatedResponse:
      description: Catalog entry created successfully
      headers:
        Location:
          description: URL of the newly created catalog entry
          schema:
            type: string
            format: uri
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CatalogEntry'

    CatalogSearchResponse:
      description: Catalog search results
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CatalogSearchResult'

    AuthorResponse:
      description: Single author response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Author'

    AuthorListResponse:
      description: List of authors with pagination
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/PaginatedResponse'
              - type: object
                properties:
                  authors:
                    type: array
                    items:
                      $ref: '#/components/schemas/Author'

    PublisherListResponse:
      description: List of publishers with pagination
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/PaginatedResponse'
              - type: object
                properties:
                  publishers:
                    type: array
                    items:
                      $ref: '#/components/schemas/Publisher'

    TagListResponse:
      description: List of available tags
      content:
        application/json:
          schema:
            type: object
            properties:
              tags:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'

    BadRequestResponse:
      description: Invalid request - validation error or malformed input
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: "VALIDATION_ERROR"
            message: "Invalid ISBN format provided"
            details:
              field: "isbn"
              constraint: "pattern"

    NotFoundResponse:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: "NOT_FOUND"
            message: "Catalog entry not found"

    ForbiddenResponse:
      description: Access forbidden - insufficient permissions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: "FORBIDDEN"
            message: "Insufficient permissions to perform this operation"

    ConflictResponse:
      description: Conflict - resource already exists
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: "DUPLICATE_ISBN"
            message: "A catalog entry with this ISBN already exists"

    ServiceNotAvailableResponse:
      description: Service temporarily unavailable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: "SERVICE_UNAVAILABLE"
            message: "The catalog service is temporarily unavailable"

  requestBodies:
    CatalogEntryCreateRequest:
      description: Request body for creating a new catalog entry
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CatalogEntryCreate'
          example:
            title: "Domain-Driven Design"
            author: "Eric Evans"
            isbn: "978-0321125217"
            publisher: "Addison-Wesley"
            publishedOn: "2003-08-20"
            abstract: "A comprehensive guide to DDD"
            tags: ["Software Architecture", "DDD"]

    CatalogEntryUpdateRequest:
      description: Request body for updating a catalog entry
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CatalogEntryUpdate'
          example:
            abstract: "Updated abstract with more details"
            tags: ["Software Architecture", "DDD", "Design Patterns"]

    CatalogSearchRequest:
      description: Request body for advanced catalog search
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CatalogSearchCriteria'
          example:
            query: "domain driven design"
            tags: ["Software Architecture"]
            publishedAfter: "2000-01-01"
            page: 0
            pageSize: 20

  securitySchemes:
    openIdConnect:
      type: openIdConnect
      openIdConnectUrl: https://auth.library.com/.well-known/openid-configuration
      description: |
        OpenID Connect authentication for the Catalog Management API.
        Scopes:
        - catalog:read - Read access to catalog entries
        - catalog:write - Create and update catalog entries
        - catalog:admin - Full administrative access including deletion

  externalDocs:
    description: |
      External integrations and cross-context interactions:
      
      - **Lending Context**: The catalog does not manage physical book copies or lending operations.
        Book availability and lending status are managed by the Lending bounded context.
        Integration: Lending context queries catalog entries via catalogEntryId.
      
      - **Notification Context**: The catalog publishes events when entries are created or updated,
        which may trigger notifications to librarians about missing books or catalog issues.
        Integration: Event-driven via domain events (CatalogEntryCreated, CatalogEntryUpdated).
      
      - **Audio Summary Context**: AI-generated audio summaries reference catalog entries but are
        managed in a separate context. Audio summaries are linked via catalogEntryId.
        Integration: Audio Summary context reads catalog metadata via this API.
      
      - **Reading Context**: Member reading activities (bookmarks, notes, bookshelves) reference
        catalog entries but are managed in the Reading bounded context.
        Integration: Reading context uses catalogEntryId as a foreign key reference.