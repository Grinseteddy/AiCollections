asyncapi: 3.0.0
info:
  title: Catalog Management Events
  version: 1.0.0
  description: |
    Events consumed and produced by the Catalog Management service.
    The service handles the following domain events:
      - Book Purchased (consumed from Purchase context)
      - Catalog Entry Created (produced for downstream contexts)
      - Catalog Entry Updated (produced for downstream contexts)
      - Catalog Entry Deleted (produced for downstream contexts)
  contact:
    name: Annegret Junker
    url: https://online-library.org/catalog
    email: annegret.junker@online-library.org
  x-api-id: 7a2c8f1d-9e4b-4a33-bc12-947d6fae3087
  externalDocs:
    description: Related Purchase Service Events
    url: https://api-docs.online-library.org/purchase-events

servers:
  event-broker-library:
    host: broker.online-library.org:8092
    protocol: kafka
    description: Event broker of the online library
    security:
      - $ref: '#/components/securitySchemes/user-password'
    bindings:
      kafka:
        schemaRegistryUrl: 'https://online-library-schema-registry.com'
        schemaRegistryVendor: 'confluent'
        bindingVersion: '0.5.0'

channels:
  BookPurchasedChannel:
    description: Channel where book purchased events are received from Purchase context
    address: book-purchased
    messages:
      BookPurchasedEvent:
        $ref: '#/components/messages/BookPurchasedReceive'
    bindings:
      kafka:
        topic: 'book-purchased-event-channel'
        bindingVersion: '0.5.0'

  CatalogEntryCreatedChannel:
    description: Channel where catalog entry created events are published
    address: catalog-entry-created
    messages:
      CatalogEntryCreatedEvent:
        $ref: '#/components/messages/CatalogEntryCreatedSend'
    bindings:
      kafka:
        topic: 'catalog-entry-created-event-channel'
        bindingVersion: '0.5.0'

  CatalogEntryUpdatedChannel:
    description: Channel where catalog entry updated events are published
    address: catalog-entry-updated
    messages:
      CatalogEntryUpdatedEvent:
        $ref: '#/components/messages/CatalogEntryUpdatedSend'
    bindings:
      kafka:
        topic: 'catalog-entry-updated-event-channel'
        bindingVersion: '0.5.0'

  CatalogEntryDeletedChannel:
    description: Channel where catalog entry deleted events are published
    address: catalog-entry-deleted
    messages:
      CatalogEntryDeletedEvent:
        $ref: '#/components/messages/CatalogEntryDeletedSend'
    bindings:
      kafka:
        topic: 'catalog-entry-deleted-event-channel'
        bindingVersion: '0.5.0'

operations:
  BookPurchasedReceiveOperation:
    action: "receive"
    channel:
      $ref: "#/channels/BookPurchasedChannel"
    description: Receive book purchased events from Purchase context to create catalog entries
    bindings:
      kafka:
        bindingVersion: '0.5.0'
        groupId:
          type: string
          pattern: ^cg-catalog-management-.*$

  CatalogEntryCreatedSendOperation:
    action: "send"
    channel:
      $ref: "#/channels/CatalogEntryCreatedChannel"
    description: Send catalog entry created events to downstream contexts
    bindings:
      kafka:
        bindingVersion: '0.5.0'
        groupId:
          type: string
          pattern: ^cg-catalog-entry-created-.*$

  CatalogEntryUpdatedSendOperation:
    action: "send"
    channel:
      $ref: "#/channels/CatalogEntryUpdatedChannel"
    description: Send catalog entry updated events to downstream contexts
    bindings:
      kafka:
        bindingVersion: '0.5.0'
        groupId:
          type: string
          pattern: ^cg-catalog-entry-updated-.*$

  CatalogEntryDeletedSendOperation:
    action: "send"
    channel:
      $ref: "#/channels/CatalogEntryDeletedChannel"
    description: Send catalog entry deleted events to downstream contexts
    bindings:
      kafka:
        bindingVersion: '0.5.0'
        groupId:
          type: string
          pattern: ^cg-catalog-entry-deleted-.*$

components:
  messages:
    BookPurchasedReceive:
      headers:
        $ref: '#/components/schemas/MessageHeader'
      payload:
        $ref: '#/components/schemas/BookPurchased'
      description: Event received when a book is purchased in the Purchase context

    CatalogEntryCreatedSend:
      headers:
        $ref: '#/components/schemas/MessageHeader'
      payload:
        $ref: '#/components/schemas/CatalogEntryCreated'
      description: Event sent when a new catalog entry is created

    CatalogEntryUpdatedSend:
      headers:
        $ref: '#/components/schemas/MessageHeader'
      payload:
        $ref: '#/components/schemas/CatalogEntryUpdated'
      description: Event sent when a catalog entry is updated

    CatalogEntryDeletedSend:
      headers:
        $ref: '#/components/schemas/MessageHeader'
      payload:
        $ref: '#/components/schemas/CatalogEntryDeleted'
      description: Event sent when a catalog entry is deleted

  schemas:
    CatalogEntry:
      description: Catalog entry aggregate root from Catalog Management context
      type: object
      required:
        - catalogEntryId
        - title
        - authors
        - isbn
        - publisher
        - publishedOn
      properties:
        catalogEntryId:
          description: Unique identifier for the catalog entry
          type: string
          format: uuid
          examples:
            - 5dda405a-d28e-490a-8508-1ea3453e91ae
        title:
          description: Title of the book or publication
          type: string
          minLength: 1
          maxLength: 500
          examples:
            - Test-Driven Development
        subtitle:
          description: Subtitle of the book
          type: string
          minLength: 1
          maxLength: 255
          examples:
            - By Example
        authors:
          description: Authors of the publication
          type: array
          minItems: 1
          maxItems: 10
          items:
            $ref: '#/components/schemas/Author'
        isbn:
          description: ISBN of the publication
          type: string
          pattern: '^(?:ISBN(?:-1[03])?:? )?(?=[0-9X]{10}$|(?=(?:[0-9]+[- ]){3})[- 0-9X]{13}$|97[89][0-9]{10}$|(?=(?:[0-9]+[- ]){4})[- 0-9]{17}$)(?:97[89][- ]?)?[0-9]{1,5}[- ]?[0-9]+[- ]?[0-9]+[- ]?[0-9X]$'
          examples:
            - 9780321146530
            - ISBN 978-0321-14653-0
        publisher:
          description: Publisher of the publication
          type: string
          minLength: 1
          maxLength: 200
          examples:
            - Addison-Wesley
        publishedOn:
          description: Publication date
          type: string
          format: date
          examples:
            - 2002-11-18
        abstract:
          description: Abstract or summary of the publication
          type: string
          maxLength: 2000
          examples:
            - A comprehensive guide to test-driven development practices
        tags:
          description: Tags for categorization and recommendations
          type: array
          maxItems: 20
          items:
            $ref: '#/components/schemas/Tag'
        createdAt:
          description: Timestamp when the catalog entry was created
          type: string
          format: date-time
          examples:
            - 2025-01-15T10:30:00Z
        updatedAt:
          description: Timestamp when the catalog entry was last updated
          type: string
          format: date-time
          examples:
            - 2025-01-15T10:30:00Z

    Author:
      description: Author value object from Catalog Management context
      type: object
      required:
        - givenName
        - familyName
      properties:
        authorId:
          description: Identifier of the author (if known)
          type: string
          format: uuid
          examples:
            - 08a13654-05f3-4664-8c8d-fdd9114ec3be
        givenName:
          description: Given name of the author
          type: string
          minLength: 1
          maxLength: 200
          examples:
            - Kent
        familyName:
          description: Family name of the author
          type: string
          minLength: 1
          maxLength: 200
          examples:
            - Beck

    Tag:
      description: Tag value object for categorization in Catalog Management context
      type: object
      required:
        - name
      properties:
        name:
          description: Tag name for categorization
          type: string
          minLength: 1
          maxLength: 50
          examples:
            - programming
            - software-development
            - testing

    BookPurchased:
      description: Event payload received from Purchase context when a book is purchased
      type: object
      required:
        - bookIdentifier
        - isbn13
        - title
        - authors
      properties:
        bookIdentifier:
          description: Identifier of the purchased book from Purchase context
          type: string
          format: uuid
          examples:
            - 5dda405a-d28e-490a-8508-1ea3453e91ae
        isbn13:
          description: ISBN (international standard book number) with 13 characters
          type: string
          pattern: ^(?:ISBN(?:-13)?:?\ )?(?=[0-9]{13}$|(?=(?:[0-9]+[-\ ]){4})[-\ 0-9]{17}$)97[89][-\ ]?[0-9]{1,5}[-\ ]?[0-9]+[-\ ]?[0-9]+[-\ ]?[0-9]$
          examples:
            - 9780321146530
            - ISBN 978-0321-14653-0
        title:
          description: Title of the purchased book
          type: string
          minLength: 2
          maxLength: 255
          examples:
            - Test-Driven Development
        subtitle:
          description: Subtitle of the purchased book
          type: string
          minLength: 2
          maxLength: 255
          examples:
            - By Example
        authors:
          description: Authors of the purchased book
          type: array
          minItems: 1
          maxItems: 10
          items:
            $ref: '#/components/schemas/AuthorFromPurchase'
        areEditors:
          description: Flag indicating if the book is published by editors
          type: boolean
          default: false
          examples:
            - true
        editor:
          $ref: '#/components/schemas/EditorFromPurchase'
        media:
          description: Link to the media containing the book
          type: string
          format: url
          examples:
            - 'https://online-library/storage/2024/test-driven-development.epub'
        format:
          description: Format of the media
          type: string
          x-extensible-enum:
            - EPUB
            - KINDLE
            - PDF
            - BBEB
            - MOBI
          default: EPUB
          examples:
            - EPUB

    AuthorFromPurchase:
      description: Author information received from Purchase context
      type: object
      required:
        - authorId
        - givenName
        - familyName
      properties:
        authorId:
          description: Identifier of the author from Purchase context
          type: string
          format: uuid
          examples:
            - 08a13654-05f3-4664-8c8d-fdd9114ec3be
        givenName:
          description: Given name of the author
          type: string
          minLength: 2
          maxLength: 55
          examples:
            - Kent
        familyName:
          description: Family name of the author
          type: string
          minLength: 2
          maxLength: 55
          examples:
            - Beck

    EditorFromPurchase:
      description: Editor information received from Purchase context
      type: object
      required:
        - name
      properties:
        name:
          description: Name of the editor
          type: string
          minLength: 2
          maxLength: 55
          examples:
            - Springer Nature
            - Addison-Wesley
        city:
          description: Location of the editor
          type: string
          minLength: 2
          maxLength: 55
          examples:
            - Cham, Switzerland
            - Boston

    CatalogEntryCreated:
      description: Event payload sent when a catalog entry is created
      type: object
      required:
        - catalogEntryId
        - title
        - authors
        - isbn
        - publisher
        - publishedOn
        - createdAt
      properties:
        catalogEntryId:
          description: Unique identifier for the created catalog entry
          type: string
          format: uuid
          examples:
            - 5dda405a-d28e-490a-8508-1ea3453e91ae
        title:
          description: Title of the catalog entry
          type: string
          minLength: 1
          maxLength: 500
          examples:
            - Test-Driven Development
        subtitle:
          description: Subtitle of the catalog entry
          type: string
          minLength: 1
          maxLength: 255
          examples:
            - By Example
        authors:
          description: Authors of the catalog entry
          type: array
          minItems: 1
          maxItems: 10
          items:
            $ref: '#/components/schemas/Author'
        isbn:
          description: ISBN of the catalog entry
          type: string
          pattern: '^(?:ISBN(?:-1[03])?:? )?(?=[0-9X]{10}$|(?=(?:[0-9]+[- ]){3})[- 0-9X]{13}$|97[89][0-9]{10}$|(?=(?:[0-9]+[- ]){4})[- 0-9]{17}$)(?:97[89][- ]?)?[0-9]{1,5}[- ]?[0-9]+[- ]?[0-9]+[- ]?[0-9X]$'
          examples:
            - 9780321146530
        publisher:
          description: Publisher of the catalog entry
          type: string
          minLength: 1
          maxLength: 200
          examples:
            - Addison-Wesley
        publishedOn:
          description: Publication date
          type: string
          format: date
          examples:
            - 2002-11-18
        abstract:
          description: Abstract of the catalog entry
          type: string
          maxLength: 2000
        tags:
          description: Tags assigned to the catalog entry
          type: array
          maxItems: 20
          items:
            $ref: '#/components/schemas/Tag'
        createdAt:
          description: Timestamp when the catalog entry was created
          type: string
          format: date-time
          examples:
            - 2025-01-15T10:30:00Z
        sourceBookIdentifier:
          description: Reference to the original book identifier from Purchase context
          type: string
          format: uuid
          examples:
            - 5dda405a-d28e-490a-8508-1ea3453e91ae

    CatalogEntryUpdated:
      description: Event payload sent when a catalog entry is updated
      type: object
      required:
        - catalogEntryId
        - updatedAt
        - updatedFields
      properties:
        catalogEntryId:
          description: Unique identifier for the updated catalog entry
          type: string
          format: uuid
          examples:
            - 5dda405a-d28e-490a-8508-1ea3453e91ae
        title:
          description: Updated title (if changed)
          type: string
          minLength: 1
          maxLength: 500
        subtitle:
          description: Updated subtitle (if changed)
          type: string
          minLength: 1
          maxLength: 255
        authors:
          description: Updated authors (if changed)
          type: array
          minItems: 1
          maxItems: 10
          items:
            $ref: '#/components/schemas/Author'
        isbn:
          description: Updated ISBN (if changed)
          type: string
          pattern: '^(?:ISBN(?:-1[03])?:? )?(?=[0-9X]{10}$|(?=(?:[0-9]+[- ]){3})[- 0-9X]{13}$|97[89][0-9]{10}$|(?=(?:[0-9]+[- ]){4})[- 0-9]{17}$)(?:97[89][- ]?)?[0-9]{1,5}[- ]?[0-9]+[- ]?[0-9]+[- ]?[0-9X]$'
        publisher:
          description: Updated publisher (if changed)
          type: string
          minLength: 1
          maxLength: 200
        publishedOn:
          description: Updated publication date (if changed)
          type: string
          format: date
        abstract:
          description: Updated abstract (if changed)
          type: string
          maxLength: 2000
        tags:
          description: Updated tags (if changed)
          type: array
          maxItems: 20
          items:
            $ref: '#/components/schemas/Tag'
        updatedAt:
          description: Timestamp when the catalog entry was updated
          type: string
          format: date-time
          examples:
            - 2025-01-15T14:30:00Z
        updatedFields:
          description: List of fields that were updated
          type: array
          items:
            type: string
            enum:
              - title
              - subtitle
              - authors
              - isbn
              - publisher
              - publishedOn
              - abstract
              - tags
          examples:
            - [ "abstract", "tags" ]

    CatalogEntryDeleted:
      description: Event payload sent when a catalog entry is deleted
      type: object
      required:
        - catalogEntryId
        - deletedAt
      properties:
        catalogEntryId:
          description: Unique identifier for the deleted catalog entry
          type: string
          format: uuid
          examples:
            - 5dda405a-d28e-490a-8508-1ea3453e91ae
        title:
          description: Title of the deleted catalog entry (for reference)
          type: string
          minLength: 1
          maxLength: 500
          examples:
            - Test-Driven Development
        isbn:
          description: ISBN of the deleted catalog entry (for reference)
          type: string
          pattern: '^(?:ISBN(?:-1[03])?:? )?(?=[0-9X]{10}$|(?=(?:[0-9]+[- ]){3})[- 0-9X]{13}$|97[89][0-9]{10}$|(?=(?:[0-9]+[- ]){4})[- 0-9]{17}$)(?:97[89][- ]?)?[0-9]{1,5}[- ]?[0-9]+[- ]?[0-9]+[- ]?[0-9X]$'
          examples:
            - 9780321146530
        deletedAt:
          description: Timestamp when the catalog entry was deleted
          type: string
          format: date-time
          examples:
            - 2025-01-15T16:30:00Z
        deletedBy:
          description: Identifier of the user who deleted the catalog entry
          type: string
          examples:
            - librarian@online-library.org

    MessageHeader:
      description: Header information for each message
      type: object
      required:
        - correlationId
        - messageId
        - x-api-identifier
        - x-api-version
      properties:
        correlationId:
          description: Identifier to trace end-to-end API journey
          type: string
          format: uuid
          examples:
            - b3416449-5f69-4cd2-a6c4-1ff82da96bce
        messageId:
          description: Identifier for the particular message
          type: string
          format: uuid
          examples:
            - 5a1d305b-19f3-46eb-ada1-9a9770e56fd1
        x-api-identifier:
          description: Identifier of the API used to create the message
          type: string
          format: uuid
          default: 7a2c8f1d-9e4b-4a33-bc12-947d6fae3087
          examples:
            - 7a2c8f1d-9e4b-4a33-bc12-947d6fae3087
        x-api-version:
          description: Version of the API
          type: string
          x-extensible-enum:
            - 1.0.0
          default: 1.0.0
          examples:
            - 1.0.0
        source:
          description: Application name creating the message
          type: string
          minLength: 2
          maxLength: 20
          examples:
            - CatalogManagement

  securitySchemes:
    user-password:
      type: userPassword
      description: Security scheme for events