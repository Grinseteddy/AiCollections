openapi: 3.1.0
info:
  title: Task Management API
  description: API for managing tasks, inboxes, and related entities in a task management system
  contact:
    email: support@taskmanagement.com
    name: Task Management Support
    url: https://api.taskmanagement.com
  version: 1.0.0
  x-api-id: 8f7e9d6c-3a2b-4f8d-b567-7e8f9a1c2b3d
  x-audience: external-public
servers:
  - url: 'https://api.taskmanagement.com/v1'
security:
  - openIdConnect:
      - task:read
      - task:write
      - task:admin
tags:
  - name: Tasks
    description: Task management operations
  - name: Inboxes
    description: Inbox management operations
  - name: Notes
    description: Note management operations
paths:
  /tasks:
    get:
      summary: List tasks
      description: Retrieve a list of tasks based on filter criteria
      operationId: listTasks
      tags:
        - Tasks
      security:
        - openIdConnect:
            - task:read
      parameters:
        - $ref: '#/components/parameters/SearchCriteriasParameter'
        - $ref: '#/components/parameters/VersionParameter'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskList'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'
    post:
      summary: Create a new task
      description: Create a new task in the system
      operationId: createTask
      tags:
        - Tasks
      security:
        - openIdConnect:
            - task:write
      requestBody:
        $ref: '#/components/requestBodies/TaskCreateRequest'
      responses:
        '201':
          $ref: '#/components/responses/TaskCreatedResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'

  /tasks/{taskId}:
    get:
      summary: Get a task by ID
      description: Retrieve details of a specific task
      operationId: getTaskById
      tags:
        - Tasks
      security:
        - openIdConnect:
            - task:read
      parameters:
        - $ref: '#/components/parameters/TaskIdParameter'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'
    put:
      summary: Update a task
      description: Update an existing task's details
      operationId: updateTask
      tags:
        - Tasks
      security:
        - openIdConnect:
            - task:write
      parameters:
        - $ref: '#/components/parameters/TaskIdParameter'
      requestBody:
        $ref: '#/components/requestBodies/TaskUpdateRequest'
      responses:
        '200':
          description: Task updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'

  /inboxes:
    get:
      summary: List inboxes
      description: Retrieve a list of inboxes for the authenticated user
      operationId: listInboxes
      tags:
        - Inboxes
      security:
        - openIdConnect:
            - task:read
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboxList'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'

components:
  parameters:
    TaskIdParameter:
      name: taskId
      in: path
      required: true
      schema:
        type: string
        format: uuid
    SearchCriteriasParameter:
      name: searchCriterias
      in: query
      schema:
        type: array
        items:
          type: string
    VersionParameter:
      name: x-version
      in: header
      required: true
      schema:
        type: string
        default: "1.0.0"

  requestBodies:
    TaskCreateRequest:
      description: Task to be created
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TaskCreate'
    TaskUpdateRequest:
      description: Task data to be updated
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TaskUpdate'
    NoteCreateRequest:
      description: Note to be added to a task
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NoteCreate'

  responses:
    TaskCreatedResponse:
      description: Task created successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Task'
    BadRequestResponse:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ForbiddenResponse:
      description: Forbidden
    NotFoundResponse:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ServiceNotAvailableResponse:
      description: Service not available
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  schemas:
    Task:
      type: object
      required:
        - id
        - description
        - status
        - createdAt
      properties:
        id:
          type: string
          format: uuid
        description:
          type: string
        status:
          type: string
          enum: [new, inProgress, done, declined]
        assignee:
          $ref: '#/components/schemas/TeamMember'
        creator:
          $ref: '#/components/schemas/Clerk'
        createdAt:
          type: string
          format: date-time
        lastUpdate:
          type: string
          format: date-time
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'

    TaskCreate:
      type: object
      required:
        - description
      properties:
        description:
          type: string
        assigneeId:
          type: string
          format: uuid

    TaskUpdate:
      type: object
      properties:
        description:
          type: string
        status:
          type: string
          enum: [new, inProgress, done, declined]
        assigneeId:
          type: string
          format: uuid

    TaskList:
      type: array
      items:
        $ref: '#/components/schemas/Task'

    NoteCreate:
      type: object
      required:
        - text
      properties:
        text:
          type: string

    Attachment:
      type: object
      required:
        - id
        - filename
      properties:
        id:
          type: string
          format: uuid
        filename:
          type: string
        document:
          $ref: '#/components/schemas/Document'

    Document:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        files:
          type: array
          items:
            $ref: '#/components/schemas/File'

    File:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string

    Inbox:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/Task'

    InboxList:
      type: array
      items:
        $ref: '#/components/schemas/Inbox'

    TeamMember:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string

    Clerk:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
        message:
          type: string

  securitySchemes:
    openIdConnect:
      type: openIdConnect
      openIdConnectUrl: "https://auth.taskmanagement.com/.well-known/openid-configuration"
  
