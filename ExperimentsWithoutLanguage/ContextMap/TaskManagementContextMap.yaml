openapi: 3.1.0
info:
  title: Task, Document, and User Management API
  version: 1.0.0
  description: API for managing tasks, documents, and users in the system.

servers:
  - url: http://api.example.com/v1

paths:
  /tasks:
    get:
      summary: Retrieve a list of tasks
      responses:
        '200':
          description: A list of tasks.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    title:
                      type: string
                    status:
                      type: string

    post:
      summary: Create a new task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                assigneeId:
                  type: integer
      responses:
        '201':
          description: Task created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  taskId:
                    type: integer

    put:
      summary: Update an existing task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                status:
                  type: string
                assigneeId:
                  type: integer
      responses:
        '200':
          description: Task updated successfully.

  /tasks/{taskId}:
    parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: integer

    patch:
      summary: Mark a task as in progress
      responses:
        '200':
          description: Task status updated to "in-progress".

    post:
      summary: Mark a task as done
      responses:
        '200':
          description: Task marked as done.

  /tasks/{taskId}/notes:
    post:
      summary: Add a note to a task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                note:
                  type: string
      responses:
        '201':
          description: Note added to the task successfully.

  /tasks/{taskId}/attachments:
    post:
      summary: Add an attachment to a task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                attachment:
                  type: string
      responses:
        '201':
          description: Attachment added successfully.

  /documents:
    post:
      summary: Create a new document
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
      responses:
        '201':
          description: Document created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  documentId:
                    type: integer

  /documents/{documentId}:
    parameters:
      - name: documentId
        in: path
        required: true
        schema:
          type: integer

    patch:
      summary: Change an existing document
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
      responses:
        '200':
          description: Document updated successfully.

  /users:
    get:
      summary: Retrieve a list of users
      responses:
        '200':
          description: A list of users.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string

    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                role:
                  type: string
      responses:
        '201':
          description: User created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: integer
  
